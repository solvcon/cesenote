%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: mesh_and_ce_se_v1.pdf
%%Creator: (Adobe Acrobat 15.10.0)
%%For: ntuhep520
%%CreationDate: 2016/1/20, 下午5:25
%%BoundingBox: 0 0 720 567
%%HiResBoundingBox: 0 0 720 567
%%CropBox: 0 0 720 567
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 605 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2016-01-14T07:19:39Z"
   xmp:CreatorTool="PowerPoint"
   xmp:ModifyDate="2016-01-14T07:19:39Z"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.11.1 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -567 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 567 li
720 567 li
720 0 li
cp
clp
gsave
0 567.164 mo
719.673 567.164 li
719.673 0 li
0 0 li
0 567.164 li
clp
0 .000180163 mo
719.673 .000180163 li
719.673 567.048 li
0 567.048 li
0 .000180163 li
false sop
0 0 0 0 cmyk
ef
127.881 67.4637 mo
592.874 67.4638 li
.750271 .679713 .654902 .901945 cmyk
25400 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[7.87043e-05 0 0 7.86947e-05 127.881 67.4637 ]ct
@
grestore newpath
127.52 137.871 mo
592.513 137.871 li
gsave
[7.87043e-05 0 0 7.86947e-05 127.52 137.871 ]ct
@
grestore newpath
127.52 208.651 mo
592.513 208.651 li
gsave
[7.87043e-05 0 0 7.86947e-05 127.52 208.651 ]ct
@
grestore newpath
127.16 277.879 mo
592.153 277.879 li
gsave
[7.87043e-05 0 0 7.86947e-05 127.16 277.879 ]ct
@
grestore newpath
126.799 349.469 mo
591.792 349.469 li
gsave
[7.87043e-05 0 0 7.86947e-05 126.799 349.469 ]ct
@
grestore newpath
126.996 66.2845 mo
126.996 136.692 li
gsave
[7.87043e-05 0 0 7.86947e-05 126.996 66.2845 ]ct
@
grestore newpath
360.377 275.64 mo
360.377 348.289 li
gsave
[7.87043e-05 0 0 7.86947e-05 360.377 275.64 ]ct
@
grestore newpath
592.256 66.2845 mo
592.256 136.692 li
gsave
[7.87043e-05 0 0 7.86947e-05 592.256 66.2845 ]ct
@
grestore newpath
591.989 203.934 mo
591.989 274.341 li
gsave
[7.87043e-05 0 0 7.86947e-05 591.989 203.934 ]ct
@
grestore newpath
591.792 133.33 mo
591.792 203.737 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 591.792 133.329 ]ct
@
grestore newpath
591.791 279.061 mo
591.791 349.469 li
gsave
[7.87043e-05 0 0 7.86947e-05 591.791 279.061 ]ct
@
grestore newpath
127.623 137.871 mo
127.623 208.278 li
gsave
[7.87043e-05 0 0 7.86947e-05 127.623 137.871 ]ct
@
grestore newpath
127.622 277.882 mo
127.622 348.289 li
gsave
[7.87043e-05 0 0 7.86947e-05 127.622 277.882 ]ct
@
grestore newpath
127.953 201.692 mo
127.953 274.342 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 127.953 201.692 ]ct
@
grestore newpath
360.377 136.692 mo
360.377 209.341 li
gsave
[7.87043e-05 0 0 7.86947e-05 360.377 136.692 ]ct
@
grestore newpath
360.377 67.4637 mo
360.377 137.871 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 360.377 67.4637 ]ct
@
grestore newpath
360.377 203.737 mo
360.377 274.144 li
gsave
[7.87043e-05 0 0 7.86947e-05 360.377 203.737 ]ct
@
grestore newpath
284.053 66.2845 mo
284.053 136.692 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 284.053 66.2845 ]ct
@
grestore newpath
204.312 66.2845 mo
204.312 136.692 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 204.312 66.2845 ]ct
@
grestore newpath
284.053 209.341 mo
284.053 279.748 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 284.053 209.341 ]ct
@
grestore newpath
204.312 209.341 mo
204.312 279.748 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 204.312 209.341 ]ct
@
grestore newpath
516.294 138.244 mo
516.295 208.651 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 516.294 138.244 ]ct
@
grestore newpath
436.553 138.244 mo
436.554 208.651 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 436.553 138.244 ]ct
@
grestore newpath
516.294 279.058 mo
516.295 349.465 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 516.294 279.058 ]ct
@
grestore newpath
436.553 279.058 mo
436.554 349.465 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 436.553 279.058 ]ct
@
grestore newpath
204.312 138.934 mo
204.312 209.341 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 204.312 138.934 ]ct
@
grestore newpath
284.053 136.692 mo
284.053 207.099 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 284.053 136.692 ]ct
@
grestore newpath
204.312 276.819 mo
204.312 347.226 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 204.312 276.819 ]ct
@
grestore newpath
284.053 275.756 mo
284.053 346.163 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 284.053 275.756 ]ct
@
grestore newpath
436.553 68.5268 mo
436.554 138.934 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 436.553 68.5268 ]ct
@
grestore newpath
516.294 66.2845 mo
516.295 136.692 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 516.294 66.2845 ]ct
@
grestore newpath
436.553 205.233 mo
436.554 275.64 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 436.553 205.233 ]ct
@
grestore newpath
516.294 202.991 mo
516.295 273.398 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 516.294 202.991 ]ct
@
grestore newpath
66.8031 327.19 mo
66.8031 395.62 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 66.8031 325.191 ]ct
@
grestore newpath
63.8044 331.188 mo
66.8031 325.191 li
69.8017 331.188 li
cp
ef
65.9185 395.598 mo
116.727 395.598 li
gsave
[0 -7.86947e-05 7.87043e-05 0 65.9186 395.598 ]ct
@
grestore newpath
112.729 392.6 mo
118.726 395.598 li
112.729 398.597 li
cp
ef
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: KAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /KAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c796600000000000033ec00000bba
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f50000000306c6f63610000000000000f80
0000001a6d6178700000000000000f9c000000206e616d65000000000000
0fbc00000020707265700000000000000fdc000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000000c040e000004a10023045a
00ac0444006104ec00ac03e800ac042200ac0562006302ae002103770029
0273004503fc0046000000a1012f01e5026202cf034b03c4045f04db056b
058e05dd000000010000000c0120001000c3000700020010002f00650000
11900182000400010000000100120001000000000006000e00005a584143
47492b43616c69627269b2090320b80284b40918014a20b80283b4091801
4a20b80282b40918014a20b80281b40918014a20b80280b40918014a20b8
027fb40918014a20b8027eb40918014a20b8027db40918014a20b8027cb4
0918014a20b8027bb40918014a20b8027ab40918014a20b80279b4091801
4a20b80278b40918014a20b80277b40918014a20b80276b40918014a20b8
0275b40918014a20b80274b40918014a20b80273b40918014a20b80271b4
0918014a20b80270b40918014a20b8026fb40918014a20b8026eb4091801
4a20b8026db40918014a20b8026cb40918014a20b8026bb40918014a20b8
026ab40918014a20b80269b40918014a20b80268b40918014a20b80267b4
0918014a20b80266b40918014a20b80265b40918014a20b80264b4091801
4a20b80263b40918014a20b80262b40918014a20b80261b40918014a20b8
0260b40918014a20b8025fb40918014a20b8025eb40918014a20b8025db4
0918014a20b8025cb40918014a20b8025bb40918014a20b8025ab4091801
4a20b80259b40918014a20b80258b40918014a20b80257b40918014a20b8
0256b40918014a20b80255b40918014a20b80254b40918014a20b80253b4
0918014a20b80252b40918014a20b80251b40918014a20b80250b4091801
4a20b8024fb40918014a20b8024eb40918014a20b8024db40918014a20b8
024cb40918014a20b8024bb40918014a20b8024ab40918014a20b80249b4
0918014a20b80248b40918014a20b80247b40918014a20b80246b4091801
4a20b80245b40918014a20b80244b40918014a20b80243b40918014a20b8
0242b40918014a20b80241b40918014a20b80240b40918014a20b8023fb4
0918014a20b8023eb40918014a20b8023db40918014a20b8023cb4091801
4a20b8023bb40918014a20b8023ab40918014a20b80239b40918014a20b8
0238b40918014a20b80237b40918014a20b80236b40918014a20b80235b4
0918014a20b80234b40918014a20b80233b40918014a20b80232b4091801
4a20b80231b40918014a20b80230b40918014a20b8022fb40918014a20b8
022eb40918014a20b8022db40918014a20b8022cb40918014a20b8022bb4
0918014a20b8022ab40918014a20b80229b40918014a20b80228b4091801
4a20b80227b40918014a20b80226b40918014a20b80225b40918014a20b8
0224b40918014a20b80223b40918014a20b80222b40918014a20b80221b4
0918014a20b80220b40918014a20b8021fb40918014a20b8021eb4091801
4a20b8021db40918014a20b8021cb40918014a20b8021bb40918014a20b8
021ab40918014a20b80219b40918014a20b80218b40918014a20b80217b4
0918014a20b80216b40918014a20b80215b40918014a20b80214b4091801
4a20b80213b40918014a20b80212b40918014a20b80211b40918014a20b8
0210b40918014a20b8020fb40918014a20b8020eb40918014a20b8020db4
0918014a20b8020cb40918014a20b8020bb40918014a20b8020ab4091801
4a20b80209b40918014a20b80208b40918014a20b80207b40918014a20b8
0206b40918014a20b80205b40918014a20b80204b40918014a20b80203b4
0918014a20b80202b40918014a20b80201b40918014a20b80200b4091801
4a20b801ffb40918014a20b801feb40918014a20b801fdb40918014a20b8
01fcb40918014a20b801fbb40918014a20b801fab40918014a20b801f9b4
0918014a20b801f8b40918014a20b801f7b40918014a20b801f6b4091801
4a20b801f5b40918014a20b801f4b40918014a20b801f3b40918014a20b8
01f2b40918014a20b801f1b40918014a20b801f0b40918014a20b801efb4
0918014a20b801eeb40918014a20b801edb40918014a20b801ecb4091801
4a20b801ebb40918014a20b801eab40918014a20b801e9b40918014a20b8
01e8b40918014a20b801e7b40918014a20b801e6b40918014a20b801e5b4
0918014a20b801e4b40918014a20b801e3b40918014a20b801e2b4091801
4a20b801e1b40918014a20b801e0b40918014a20b801dfb40918014a20b8
01deb40918014a20b801ddb40918014a20b801dcb40918014a20b801dbb4
0918014a20b801dab40918014a20b801d9b40918014a20b801d8b4091801
4a20b801d7b40918014a20b801d6b40918014a20b801d5b40918014a20b8
01d4b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1b4
0918014a20b801d0b40918014a20b801cfb40918014a20b801ceb4091801
4a20b801cdb40918014a20b801ccb40918014a20b801cbb40918014a20b8
01cab40918014a20b801c9b40918014a20b801c8b40918014a20b801c7b4
0918014a20b801c6b40918014a20b801c5b40918014a20b801c4b4091801
4a20b801c3b40918014a20b801c2b40918014a20b801c1b40918014a20b8
01c0b40918014a20b801bfb40918014a20b801beb40918014a20b801bdb4
0918014a20b801bcb40918014a20b801bbb40918014a20b801bab4091801
4a20b801b9b40918014a20b801b8b40918014a20b801b7b40918014a20b8
01b6b40918014a20b801b5b40918014a20b801b4b40918014a20b801b3b4
0918014a20b801b2b40918014a20b801b1b40918014a20b801b0b4091801
4a20b801afb40918014a20b801aeb40918014a20b801adb40918014a20b8
01acb40918014a20b801abb40918014a20b801aab40918014a20b801a9b4
0918014a20b801a8b40918014a20b801a7b40918014a20b801a6b4091801
4a20b801a5b40918014a20b801a4b40918014a20b801a3b40918014a20b8
01a2b40918014a20b801a1b40918014a20b801a0b40918014a20b8019fb4
0918014a20b8019eb40918014a20b8019db40918014a20b8019cb4091801
4a20b8019bb40918014a20b8019ab40918014a20b80199b40918014a20b8
0198b40918014a20b80197b40918014a20b80196b40918014a20b80195b4
0918014a20b80194b40918014a20b80193b40918014a20b80192b4091801
4a20b80191b40918014a20b80190b40918014a20b8018fb40918014a20b8
018eb40918014a20b8018db40918014a20b8018cb40918014a20b8018bb4
0918014a20b8018ab40918014a20b80189b40918014a20b80188b4091801
4a20b80187b40918014a20b80186b40918014a20b80185b40918014a20b8
0184b40918014a20b80183b40918014a20b80182b40918014a20b80181b4
0918014a20b80180b40918014a20b8017fb40918014a20b8017eb4091801
4a20b8017db40918014a20b8017cb40918014a20b8017bb40918014a20b8
017ab40918014a20b80179b40918014a20b80178b40918014a20b80177b4
0918014a20b80176b40918014a20b80175b40918014a20b80174b4091801
4a20b80173b40918014a20b80172b40918014a20b80171b40918014a20b8
0170b40918014a20b8016fb40918014a20b8016eb40918014a20b8016db4
0918014a20b8016cb40918014a20b8016bb40918014a20b8016ab4091801
4a20b80169b40918014a20b80168b40918014a20b80167b40918014a20b8
0166b40918014a20b80165b40918014a20b80164b40918014a20b80163b4
0918014a20b80162b40918014a20b80161b40918014a20b80160b4091801
4a20b8015fb40918014a20b8015eb40918014a20b8015db40918014a20b8
015cb40918014a20b8015bb40918014a20b8015ab40918014a20b80159b4
0918014a20b80158b40918014a20b80157b40918014a20b80156b4091801
4a20b80155b40918014a20b80154b40918014a20b80153b40918014a20b8
0152b40918014a20b80150b40918014a20b8014fb40918014a20b8014eb4
0918014a20b8014cb40918014a20b8014bb40918014a20b8014ab4091801
4a20b80149b40918014a20b80148b40918014a20b80147b40918014a20b8
0146b40918014a20b80145b40918014a20b80144b40918014a20b80143b3
0918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e
3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1f
b8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb802
78b21d431fb80277b21d431fb80276b21d431fb80275b21d411fb80274b2
1d431fb80273b21d431fb80272b21d411fb80271b21d421fb80270b21d42
1fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8
026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c451fb80267
b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb80263b21c
451fb80262b21c451fb80261b21c451fb80260b21c451fb8025fb21c451f
b8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c451fb802
5ab21c451fb80259b21c451fb80258b21c451fb80257b21c451fb80256b2
1c451fb80255b21c451fb80254b21c451fb80253b21c451fb80252b21c45
1fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8
024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb80249
b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b
4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491f
b80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb802
3cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b2
1b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b49
1fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8
022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022b
b21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b
491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1f
b80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb802
1eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab2
1a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e
1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb8
0211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020d
b21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a
4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205b219511f
b80204b219511fb80203b219501fb80202b219511fb80201b219511fb802
00b219511fb801ffb219511fb801feb219501fb801fdb219511fb801fcb2
19511fb801fbb219511fb801fab219501fb801f9b219511fb801f8b21951
1fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b218531fb8
01f3b218541fb801f2b218541fb801f1b218541fb801f0b218531fb801ef
b218541fb801eeb218541fb801edb218541fb801ecb218531fb801ebb218
531fb801eab218541fb801e9b218541fb801e8b218541fb801e7b218541f
b801e6b218531fb801e5b218541fb801e4b218531fb801e3b218541fb801
e2b218541fb801e1b218541fb801e0b218531fb801dfb218531fb801deb2
18541fb801ddb218541fb801dcb218541fb801dbb218541fb801dab21853
1fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b217561fb8
01d5b217561fb801d4b217571fb801d3b217571fb801d2b217571fb801d1
b217571fb801d0b217561fb801cfb217561fb801ceb217571fb801cdb217
571fb801ccb217571fb801cbb217571fb801cab217561fb801c9b217561f
b801c8b217571fb801c7b217571fb801c6b217571fb801c5b217571fb801
c4b217571fb801c3b217561fb801c2b217571fb801c1b217571fb801c0b2
17571fb801bfb217561fb801beb217561fb801bdb217571fb801bcb21757
1fb801bbb217571fb801bab217571fb801b9b217571fb801b8b217561fb8
01b7b217571fb801b6b217571fb801b5b217571fb801b4b217571fb801b3
b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb216
5b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1f
b801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801
a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2
165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f
1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb8
0199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb80195
b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb80191b216
5b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1f
b8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb801
88b2165b1fb80187b2165b1fb80186b215611fb80185b215621fb80184b2
15621fb80183b215661fb80182b215661fb80181b215551fb80180b21545
1fb8017fb215361fb8017eb215361fb8017db215611fb8017cb215621fb8
017bb215621fb8017ab215641fb80179b215661fb80178b215661fb80177
b215661fb80176b215661fb80175b215661fb80174b215661fb80173b215
451fb80172b215621fb80171b215621fb80170b215631fb8016fb215641f
b8016eb215661fb8016db215661fb8016cb215661fb8016bb215661fb801
6ab215661fb80169b215621fb80168b215621fb80167b215611fb80166b2
15641fb80165b215641fb80164b215661fb80163b215661fb80162b21566
1fb80161b215661fb80160b215661fb8015fb215661fb8015eb215551fb8
015db215451fb8015cb215451fb8015bb215361fb8015ab215611fb80159
b215621fb80158b215621fb80157b215631fb80156b215641fb80155b215
661fb80154b215661fb80153b215661fb80152b215661fb80151b214401f
b80150b214551fb8014fb214561fb8014eb214831fb8014db2142d1fb801
4cb214401fb8014bb214401fb8014ab214411fb80149b214401fb80148b2
14401fb80147b214411fb80146b2147e1fb80145b214871fb80144b2147f
1fb80143b214801fb80142b212461fb80141b212461fb80140b212461fb8
013fb212461fb8013eb212441fb8013db212461fb8013cb211591fb8013b
b211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb80137b211
581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1f
b80132b211471fb80131b211551fb80130b211571fb8012fb211571fb801
2eb211581fb8012db211591fb8012cb211591fb8012bb2115a1fb8012ab2
115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b
1fb80125b211561fb80124b211561fb80123b211571fb80122b211581fb8
0121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011d
b2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b210
5d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1f
b80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb801
10b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2
105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f
1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb8
0103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f
621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641f
f70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f
641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f641f
e80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e
671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681f
d90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d
6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1f
ca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d
311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c
721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c721f
b40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b
7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1f
a50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b
7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f
960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a
4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f82558055
81ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d401206
0a7c557a557bab7a557955775578ab7755ba028600660285403c5576ab75
5504751475747503f47501ab750144750130750102007510752075030c74
55725573ab7255007250728072b072043bb072e072020072010ab8ffc0b3
721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a03251f69
38675568ab67556638645565ab645563386255613860555f385d555eab5d
555c385a555bab5a55593858555703251f5638545555ab54555338515552
ab51554f384e554e03251f4d384b554cab4b554a38485549ab4855473846
554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401b
e01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f19
8f19030f18cf18024018292c460f17cf17df17ef1704134017292e460016
101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546
b8ffc0404d162326460f15010f151f1502451f15010011e011f0110315bf
10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e0340
0e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054
460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001010001
100120010308b8ffc0b301151f46b80100b316010501b80190b154532b2b
4bb80800524bb008505bb00188b02553b00188b040515ab00688b000555a
5b58b101018e59b101024354b0144b515a58b101018e59858d8d00421d4b
b01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db116004259
2b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e73742b
2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e73
2b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff
0284006402830064028200640281006402800064027f0064027e0064027d
0064027c0064027b0064027a006402790064027800640277006402760064
0275006402740064027300640271006402700064026f0064026e0064026d
0064026c0064026b0064026a006402690064026800640267006402660064
026500640264006402630064026200640261006402600064025f0064025e
0064025d0064025c0064025b0064025a0064025900640258006402570064
02560064025500640254006402530064025200640251006402500064024f
0064024e0064024d0064024c0064024b0064024a00640249006402480064
024700640246006402450064024400640243006402420064024100640240
0064023f0064023e0064023d0064023c0064023b0064023a006402390064
023800640237006402360064023500640234006402330064023200640231
006402300064022f0064022e0064022d0064022c0064022b0064022a0064
022900640228006402270064022600640225006402240064022300640222
00640221006402200064021f0064021e0064021d0064021c0064021b0064
021a00640219006402180064021700640216006402150064021400640213
0064021200640211006402100064020f0064020e0064020d0064020c0064
020b0064020a006402090064020800640207006402060064020500640204
41ff00640203006402020064020100640200006401ff006401fe006401fd
006401fc006401fb006401fa006401f9006401f8006401f7006401f60064
01f5006401f4006401f3006401f2006401f1006401f0006401ef006401ee
006401ed006401ec006401eb006401ea006401e9006401e8006401e70064
01e6006401e5006401e4006401e3006401e2006401e1006401e0006401df
006401de006401dd006401dc006401db006401da006401d9006401d80064
01d7006401d6006401d5006401d4006401d3006401d2006401d1006401d0
006401cf006401ce006401cd006401cc006401cb006401ca006401c90064
01c8006401c7006401c6006401c5006401c4006401c3006401c2006401c1
006401c0006401bf006401be006401bd006401bc006401bb006401ba0064
01b9006401b8006401b7006401b6006401b5006401b4006401b3006401b2
006401b1006401b0006401af006401ae006401ad006401ac006401ab0064
01aa006401a9006401a8006401a7006401a6006401a5006401a4006401a3
006401a2006401a1006401a00064019f0064019e0064019d0064019c0064
019b0064019a006401990064019800640197006401960064019500640194
006401930064019200640191006401900064018f0064018e0064018d0064
018c0064018b0064018a0064018900640188006401870064018600640185
006441800184006401830064018200640181006401800064017f0064017e
0064017d0064017c0064017b0064017a0064017900640178006401770064
01760064017500640174006401730064017200640171006401700064016f
0064016e0064016d0064016c0064016b0064016a00640169006401680064
016700640166006401650064016400640163006401620064016100640160
0064015f0064015e0064015d0064015c0064015b0064015a006401590064
015800640157006401560064015500640154006401530064015200640150
0064014f0064014e0064014c0064014b0064014a00640149006401480064
01470064014600640145006401440064014300642b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18
5f5e00>
[3003 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 2238 8 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>KAAAAA+Calibri AddT42Char 
1 2486 9 <00010029fffa034b03bc002f0086b90031ffc040110b014d2f080b014d2e
100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d16b8fff0
b60b014d34160109b8fff0402a0b014d00080b014d3c0001382301360b01
0b2010014d0b200c014d0b0b31302949230b111d49114c054c003f3f3f12
39393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b2b2b2516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>KAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>KAAAAA+Calibri AddT42Char 
KAAAAA+Calibri /CharStrings get begin
/g8 8 def
/g9 9 def
end
KAAAAA+Calibri /Encoding get
dup 33 /g8 put
dup 34 /g9 put
pop
end
%ADOEndSubsetFont
/ZHYQFG+Calibri /KAAAAA+Calibri findfont ct_VMDictPut/ZHYQFG+Calibri*1 [33{/.notdef}rp /g8 /g9 221{/.notdef}rp]ZHYQFG+Calibri nfZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf51.4235 329.552 mo(!)sh%ADOBeginSubsetFont: LAAAAA+PMingLiU-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (LAAAAA+PMingLiU)%%Title: (LAAAAA+PMingLiU Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /LAAAAA+PMingLiU def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {0 -198 999 801} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE3100AAC671FFC18DDB3764E95ECE8020311F82848570B1358F8FCDF8604B> |1 <001C60D8A8C9B8666C32> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /LAAAAA+PMingLiU-Identity-H /Identity-H 0 [/LAAAAA+PMingLiU] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZHYQFH+PMingLiU /LAAAAA+PMingLiU-Identity-H findfont ct_VMDictPutZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf57.4501 329.552 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf111.771 411.952 mo(")sh%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPS-ItalicMT Initial
ct_T42Dict begin
-0.496 -0.305 1.332 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+TimesNewRomanPS-ItalicMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007966670
676d0000000000000854000005cd676c796600000000000019ec0000075c
686561640000000000000e2400000036686865610000000000000e5c0000
0024686d74780000000000000e80000000186c6f63610000000000000e98
0000000e6d6178700000000000000ea8000000206e616d65000000000000
0ec800000034707265700000000000000efc00000aed6764697200000000
0000000000000000058e0000054c001f054c001c037100180000ffe10000
ffe80000ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000
000000000000002500a8008e010b007d00820045003200a400ca006b0070
005100af003c00f001d700470004002500770029004000fd001601610046
01370029008e0017ffca0025005bffe902e600020099008100f2007500d6
006300c60006009a01330024003800cc003dff67001305d8003600860095
ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c
004d004e00540058006700b4040100020005005000af01d5034300240058
008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e
0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f
0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a2
00a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0
ff16fff1000f002d00550068006e007f00890095009e00c200da00e400f8
01040108011101c2023002da030e049e0517ff00ff8700000020002f0041
0057007800870088008800b900c200c5012001280133017401d6020e020f
026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe900070023
0023002600520077007d0081008f009900ac00ae00b500b800c800ea00f0
00f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc
000b00240025002c0030003000330040004700490057006e009a00bd00c9
00cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f60286
02cf02de039603a903b003c804010432046a058b05e006510761fe96fe9a
ff4bff870013002500340038003e004a0065006b0073007a009c00a200b2
00b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da
057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066
006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d
01a301ab01da01ee021002180222028f029402a302d202e703710393039b
03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77
ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e
0048004b004c005e005f006b0071007c008a00900091009100a700af00b3
00b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f5
00fc010201180123013101330137015c016201660170017a017a017a0182
01980199019b01b001bf01c001ca01d301d701d801e001e001f601f701f8
02120213022f023702440247024f0252026302650270027f0298029b02a6
02b702ba02c502cf02d602d702e502fe031c031d03450348035d035e0371
0379038103a103b703d403d503d803e103f803fe0404041f042104230425
043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b3
06cb06e8070607280748075007a607b207ff009500af0092009600000000
0000000000000000017e01a80129025b0212020301c302b4019301cd02b2
04ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038
005405d3041501a7000002860168005000cf0002004b0024008800ba0025
ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b
0099003d009f00160039002700de00790120022e005a0099038800940021
0019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b50406
01a1014f014b011c0308005e00c70024029d006503750104028002f304d8
00d90239025a032c01f204310303005002e50283005901eb010800ac0196
02f8012100950180004400e501eb02e5007400f301ff02fd038f026801c8
01c70116022b0142033000fe02e101620200002400ee0517010802370066
0006010201e602aa0366019b00d305c203dc044d03b6000401be013702fc
03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef
0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d
0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026
001f0025003a000001170490fbfb0251001d02f001f50078018f005f0024
0044005400bf00af006701a8002600050006003f009800fa02ab00c2004d
0375004a00b600c401bf017c006f00130263000c006801520002012e0104
001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
fe4000ce006e0056004800db018b00b30048023904580053008200820022
0000404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c01182f2d2c20b0032545b019234445b01a23444565234520b0032560
6a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a
45208a54582321b03f1b235961441cb114008a5279b31940201945208a54
582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2c
b10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1
1011432343650b2d2c4b525845441b2121592d2c0120b003252349b04060
b0206320b000525823b002253823b002256538008a63381b212121212159
012d2c4bb06451584569b00943608a103a1b212121592d2c01b005251023
208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c
01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161011020
3c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c35
2d2c76b802ee23701020b802ee4520b0005058b00161593a2f182d2c2121
0c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f
2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002
602d2c0c6423648bb84000626023212d2cb4000100000015b00826b00826
b00826b008260f10161345683ab001162d2cb4000100000015b00826b008
26b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a
60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a5838
1b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358
021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425
b00425060c6423646164b807085158b00425b00425012046b01060482046
b0106048590a21211b2121592d2cb012435c580cb00425b00425060c6423
646164b807085158b00425b00425012046b8fff060482046b8fff0604859
0a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b51
5a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c
0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4623
46608a8a462320468a608a61b8ff8062232010238ab903b003b08a704560
20b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b1
23018851b1400188535a58b910000020885458b202010243604259b12401
885158b920000040885458b202020243604259b12401885458b202200243
6042004b014b5258b2020802436042591bb940000080885458b202040243
604259b94000008063b80100885458b202080243604259b94000010063b8
0200885458b2021002436042595959592d0000000001000000050ccdc12f
8ef55f0f3cf50819080000000000a31fb8bd00000000c5b1f9c8fc05fd8c
0aaa0830000200090001000000000000000100000721fe4500570a3afc05
fa500aaa0018000700000000000000000000000000060639011c02000000
0239fea00400002702390054038dffb800000034003400f1020b02c103ae
000000010000000600f2003c0082000500020010002f0055000004d90258
000400020000000100120001000000000006001f00004c434b594f4a2b54
696d65734e6577526f6d616e50532d4974616c69634d54000000b1540041
0c03bc003003bc004003bc00a003bc00b003bc0005ffc003bbb345453240
b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a263280411303bb00
9f03bb00af03bb00cf03bb0004000003bb001f03bb000203bb02af002700
1fffc003b9b2161b32b9ffc003b8b2424232b9ffc003b8b2363832b9ffc0
03b8b32a2d32df410a03b800ef03b8000203b803b90028001fffc003b9b3
282e32f0410f03b90001000003b7000103b700030800001f03be03bf002b
001fffc003bfb2242a32b903b60381b23a1f0f411703b3001003b2002003
b2005003b2007003b200e003b2000600cf03b300df03b300ef03b300ff03
b30004001203a8b2e2891fbe039f016b019a001f039800930801400c1f7f
047f05027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3651a66
32b9ff800173b2196632bd038401170800001fffc002afb2313340b802af
b22e3340b802afb328293240b802afb326273240b802afb321253240b802
afb31c203240b802afb2233340b802afb21933a0bc02af00b002af00e002
afb5034003212932b8fff2b33a263d32bc038203820382003a0800b51f40
255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e3269be0381
0001008a03810001000e0381b32b2f3210b80381b3515b320cb80381b34e
513222b80381b3474d320eb80381b246330ab80381400926473212254358
320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381003d00
33fff44015253d331825355b32102526343206252a330c252e33b8fffe40
24252d330c3a2f33329925aa25ba25c92504052536330c25323832193a29
3a383a03182517b80381b42825382504bc0381038103810025080040101f
0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32bc038003800380
001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33b8ffdc
400aac1f223222232b52320eb8037fb229330eb8037fb2223314b8037fb2
1e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c33410a
ffee037f00390033fff8037f002b0033ffea037fb23a3320b8037fb33f46
321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320eb8037fb226
3304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f400c1d
3322263032322226333832b8fff8400a262b2f3209261b21328abe037f00
01037f037f037f00260800402e1f371f062f063f06039f02af02bf02cf02
049f03af03bf03cf03046f037f038f03031f032f033f034f035f03050f41
3502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed006f02
ed000300af02af0001004f02af009f02af0002002f02af003f02af000200
3f02b00001004f02af005f02af0002002f02af003f02af0002007003b200
0103b203b202ed02ed02b002b002af02af401a3701003001400102010100
090102000800171700000012110840410b027b02230034000d013d003400
0d01370034000d011b401a340d8f340d84340d68340d59340d54340d4834
0d2c340d28340d411002350020000d021b0020000d01fc0020000d01c300
20000d01500020000d012c401a200df0200dbe200d94200d79200d6a200d
61200d5f200d44200d410d013e0138000d003d0138000d00300138000d00
1d0138000d01fdb40f4d0f0009bf01fd004d000d03b1037f0015001f0215
b226341fb80214b2263f1fb80208b21ebb1f41190206001e0801001f0205
001f02ab001f0204001f02ab001f0203001f0401001f02010031019a001f
01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb226341f4115
01a8002602ab001f01a5001e0125001f01a400ab02ab001f01a2003102ab
001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109019b002304
01001f019a0033019a001f0176b2262e1fb8016cb231721f4111016b0023
019a001f016800240401001f014500260801001f013f00230401001f0123
b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa33b808
01b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b8010140
0b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b21fb731
b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e1f9333
b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f7523e41f7026
cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f5324b8
0201b21f4f33b802abb21f4e26b8040140131f4731671f4626ab1f4331cd
1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b80401b21f
2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007012b40
2e077f077107690766074b074007380736072d0722072107140812081008
0e080c080a080808060804080208000814b8ffe0402b0000010014061000
000100060400000100041000000100100200000100020000000100000201
0802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009505b58
b101018e59014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b544218b0382bb00288b801005458b801ffb101018e851bb0124358
b900010140858d1bb900010159858d59590016763f183f123e113946443e
113946443e113946443e113946443e11394660443e11394660442b2b2b2b
2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358
b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d027b4544b9027c
027b45445958b90146027d455258b9027d01464459594bb04753205c58b9
001e027c4544b90026027c45445958b9017f001e455258b9001e017f4459
594bb05e53205c58b9001f027d4544b90025027d45445958b901a8001f45
5258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45445958
b9047000ab455258b900ab04704459594bb8012553205c58b1e61f4544b1
1f1f45445958b9051000e6455258b900e605104459594bb01753205c58b1
24244544b1312445445958b12224455258b124224459594bb05153205c58
b124244544b1232445445958b17d24455258b1247d4459594bb06e53205c
58b124244544b1332445445958b1aa24455258b124aa4459592b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b10800
42591610703eb0124358b911b53d801bba011c03d9000b2b59b00a2342b0
0b2342003f3f182b103c012f5d060cb0062342b0072342b0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a60b801
6b2344590018456944456944184569444569447373737375757573737475
757575752b4bb026534bb03d515a58b1262645b0196044592b4518694474
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb0
2a534bb03f515a58b1070745b04060445973732b2b451869442b2b752b2b
4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b
2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b
2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff00381b1
12332b2b2b2b590173742b2b2b002b73752b2b732b2b2b2b2b73752b2b2b
2b732b00000000>
[1885 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> MAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 104 2 <0002fea4fe46023e0515000b003000e7b61232400f103432b8ffc0b31b27
3432b8ffc0401d0d355f0d5f255b265b279330051a29013045265a282f30
304d0c007006b8039c40210c070c0d0c300d1f25261425252616b8222410
0f25400f39253128262510097003b8ffc0400e2a35900301400350030203
57320cb8032bb34f260126b8019fb5261ee4133a1ab80335400b26eb3125
1725310a3286182b2b103c2b10f6f6fded10e45ded10f45d712bed2b103c
2b10c02b003ffde4870e2e2b087d10c400183ff6ed10f5ed2bfc01f53130
01715d2b2b2b435c5840140d400f390e400f3925400f390c400f3926400f
392b2b2b2b2b590132161514062322263534361301060623222635343633
321716151407061517161633323637133635342623220706073501d92a3b
3b2a2a3b3b3afefd45f18c3f4131201d1612190e02030c0c51732de0212b
210d110d1905153b2a2a3b3b2a2a3bfe74fc81f0d43a281f2f130f131a13
0b07050404679a0300710c18260302042300>MAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 482 3 <00010027ffe803ad03890036018f400901180c392d180c390ab8ffde409c
13143e14221339082f16001b021b2f0451075209521e512079017b2d891e
a627a428ba02ba260b5c015c28bf01035a095a1e5a2003690669096a1e79
09791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c
0c1f1b20141b1b20002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b
2d2c10148a13b80143b30c072520b80124b20c251bb8ffc0b25c351bb802
95b235c92dbc0124002b0203002cffc0b217392cb8ffc0b25c352cb8ffc0
b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc0
4013191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f4
5d2b2b2b2b2b2b2b4dede4e4f42bedf4ed10f6ed2b103c103c2b10c0003f
3f3c87052e2b087d10c4870e2e182b7d10c400183f3c10ed720111123900
11123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d5d4bb032
534bb036515a58b120223859015d005d015d712b2b2b2b01031236333216
151407030615141633323736371706070623222635343713363534262322
07060607060707231336353426232207072701c485bbc75c32411d7a1510
090c11353f1f5d533a2e252c2274161a131c274aa0592f1f3296b620231a
0c1e26060389fe390117b042353c64fe5b49100e130d2a56138539272d26
307501924b2a1419182dcfa15565a5027271171621040624>MAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 1410 5 <0001ffbcffe8038403890046010840630d40120b3f0700072a003d013e14
001601240023014a1b56018919a301a919aa2aa83daf3f10484010351017
63217321c919cb210509230c2a52230304191a1a022a2a2b3e403e3c4028
2122021a1a1f2840142828403e2a1904041135428a46c60011b80395401f
153a0a0a000735c639272e2e260b042a193e218a9f22cf220222c90d02e4
45ba014700400124b21a8228b8019f401d19e43e403b4b343e401d353e3e
47200d400d8f0daf0d040d1a48321947b80114b1de182b4e10e410e65d12
392f2b2b4dedf4edf4e6ed10f45ded11123939003f3c10fde43f3c10fde4
10f4ed11121739870e2e2b0e7d10c40110c90708103c083c870e10c4c431
30005d5d012b5d2b01161716173736363736333216151407062322272623
220706071316163332373637170607062322272603020706232227263534
363332171633323736363726272626232207350167311912295823642618
1d2b330f1c2415182f1018213e5652131a0d151c3727233f613726382115
429c5e3d392821182c2020241a0e0c132fa2193e05174a48171e03893434
2499843057100a2e21260e1909101c3495fea84f1f172e4a12764e2c3f27
0129fef14e321d1625212c20171026fc38f30e4136022400>MAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
1 0 0 <0002011c0000051c050000030007003fb40201f80607b802664013000504
f803000a0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c
4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121011c04
00fc2003c0fc400500fb002004c0>MAAAAA+TimesNewRomanPS-ItalicMT AddT42Char 
MAAAAA+TimesNewRomanPS-ItalicMT /CharStrings get begin
/space 1 def
/j 2 def
/n 3 def
/x 5 def
end
MAAAAA+TimesNewRomanPS-ItalicMT /Encoding get
dup 32 /space put
dup 106 /j put
dup 110 /n put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/ZHYQFI+TimesNewRomanPS-ItalicMT /MAAAAA+TimesNewRomanPS-ItalicMT findfont ct_VMDictPut/ZHYQFI+TimesNewRomanPS-ItalicMT*1 [32{/.notdef}rp /space 73{/.notdef}rp /j 3{/.notdef}rp /n 9{/.notdef}rp /x 135{/.notdef}rp]ZHYQFI+TimesNewRomanPS-ItalicMT nfZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf357.283 40.6476 mo(j)sh%ADOBeginSubsetFont: NAAAAA+PMingLiU-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (NAAAAA+PMingLiU)%%Title: (NAAAAA+PMingLiU Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /NAAAAA+PMingLiU def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {0 -198 999 801} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE3100AAC671FFC18DDB3764E95ECE8020311F82848570B1358F8FCDF8604B> |1 <001C60D8A8C9B8666C32> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /NAAAAA+PMingLiU-Identity-H /Identity-H 0 [/NAAAAA+PMingLiU] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZHYQFJ+PMingLiU /NAAAAA+PMingLiU-Identity-H findfont ct_VMDictPutZHYQFJ+PMingLiU [17.9918 0 4.49795 -17.9896 0 0 ]msf362.282 40.6476 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf190.989 41.3093 mo(j )[4.99812 0 ]xsh%ADOBeginSubsetFont: OAAAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007da6670
676d000000000000089800000631676c79660000000000001f0800000880
686561640000000000000ecc00000036686865610000000000000f040000
0024686d74780000000000000f28000000306c6f63610000000000000f58
0000001a6d6178700000000000000f74000000206e616d65000000000000
0f940000002c707265700000000000000fc000000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2cb0024354584b53234b515a58381b2121591b21
212121592d0000000001000000050ccd571894305f0f3cf5081908000000
0000a2e31dc200000000c5b1f690fb74fd8c1000080e0000000900010000
00000000000100000721fe4500571000fb74fadf10000001000000000000
0000000000000000000c0639011c0200000002aa005402aa002e04830025
0200006e02aa005302390003040000f00400002c040000530400ffee0000
003b003b007d00be0126017501a201db024d033504240440000000010000
000c00f2003c009d000700020010002f00560000062504eb000500020000
00010012000100000000000600180000454e434c4e592b54696d65734e65
77526f6d616e50534d540000b9005403ecb3032a1f3f411503e4006003e9
009f03e500df03e50004001003e4001003e5003f03e5007003e400ff03e4
0005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003
e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb24242
32b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de0002
03de03df0028001fffc003dfb3282e32f0410d03df0001037e000f010100
1f00a003dd00b003dd0002004003dab32426329fbf03cc000103ca03c900
64001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fff
c003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d
0004006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f
03a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5
008f03a50004005403aa0001006b03aa000103a8036a0022001f038c0394
0015001f038b03930015001f03a40393001a001f03a20394001e001f03a1
0393001e001f039f0394001e001f039b0394001a001f039a0393001e001f
039903940016001f039803940016001f03970393001b001f03960394001b
001f03950393001b001f03760375001a001f03740375001a001f03a00373
b21e1f10411e039300200393003003930003002003940030039400400394
00030000039400010383036c001e001f03b1036c0032001f036d036c0032
001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0
037d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c
00b0037c00c0037c00d0037c000400300373004003730002000003730010
037300200373000300e0037300f00373000200b0037300c0037300d00373
0003008403730090037300a0037300030377036a0029001f0389036ab228
1f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100
400366b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100
400365b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b
036300020014036300240363003403630044036300040363b2242f1fba03
4e006d0800400e1f7f027f037f047f050430440112bf033200500800001f
0012032d003c080040291f5f3c0137600970098009031009200930094009
5009056f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ff
c04047063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006
3006400650066006700680069006a006099006900702600b700b800b0310
0b200b300b400b500b051f0701a041850362000100000362001003620070
036200900362000400f0035f00010020035e0020035f0030035f0040035e
00040000035e0000035f0010035f00d0035e00e0035f00050010030f0020
030f0030030f00d0030f00e0030f00050000030f0010030f0050030f0060
030f0070030f00d0030f00060000030f0010030f0020030f0030030f00e0
030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e
0002030e004a00e0030d00f0030d0002030d002700d002fc0001001002fc
002002fc005002fc000300d002fc00e002fc0002000002fc001002fc0020
02fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc
003002fc004002fc000302fc406127c02901b02901a02901902901403c3f
413240223f41321212125f235f255f285fa5046f236f256f286fa5044f23
4f254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f
281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8
ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02
af00df02af0003001f02af002f02af003f02af006f02af000402af02af00
1f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02
ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad000200
0f02ad001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac00
9f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300
b002ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02
ac003f02ac0003000f035a0001000f035a001f035a003f035a005f035a00
70035a000500cf035700df03570002000f0357001f03570070035700af03
570004035a035a0357035702ad02ad02ac02ac032c400d31151f00161600
0000121108104110020c004a000d01a8004a000d0198004a000d0189004a
000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe022800
41000d01940041000d0121400b410db4410d4f410d29410d411002170021
000d02150021000d02060021000d01eb0021000d014e0021000d012c4014
210df9210df3210df1210d9d210d71210d3d210d4110021c001f000d0214
001f000d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f
0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b01
41000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c29
1fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc
01f9010f0101001f01f6b224e41f411501f401490401001f01f301490401
001f01f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c
811f411501a3010f019a001f01a200220801001f01a100500401001f019f
0149019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a
002c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2
259e1fb8016ab23c2a1f4111016700240201001f0163002502ab001f014c
010f019a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144
b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb2
23e41f4115011d0023019a001f011c00230801001f011b00250801001f01
0e010f0401001f010d00220401001f0108b223811fb80106b425e41ff73c
bb0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901
490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21f
bf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21f
a523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f
006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb8012540
0a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb6
1f2a24e41f2623b80156b21f5537ba023500070175402c07740762075607
51073b0733072d0720071d071c071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b534201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101
018e59b0382bb00288b801005458b801ffb101018e851bb0124358b90001
012f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a
515ab0052342180016763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb04753205c58b90271026f4544b90270026f45445958b9017a027145
5258b90271017a4459594bb04753205c58b9002202704544b9003c027045
445958b901b30022455258b9002201b34459594bb04c53205c58b9014900
224544b1222245445958b901c20149455258b9014901c24459594bb06753
205c58b9002402714544b90050027145445958b9021e0024455258b90024
021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00
010f455258b9010f0c004459594bb01c53205c58b125254544b12c254544
5958b13725455258b125374459594bb0ab53205c58b125254544b1232545
445958b901590025455258b9002501594459594bb8010153205c58b12525
4544b1282545445958b902080025455258b9002502084459592b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361
dc6463456523456023456560234560b08b766818b080622020b164dc4565
234520b003266062636820b003266165b0dc236544b064234420b1616345
65234520b003266062636820b003266165b063236544b0612344b1006345
5458b163406544b26140614523614459b3a67f434b456523456023456560
234560b089766818b080622020b1437f4565234520b003266062636820b0
03266165b07f236544b043234420b1a64b4565234520b003266062636820
b003266165b04b236544b0a62344b1004b455458b14b406544b2a640a645
236144594b5242014b5058b108004259435c58b108004259b3020b0a1243
58601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b0
0c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342
b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b01123
42002b0018456944456944456944456944737373747373737475752b7373
747475184569447373742b4bb021534bb046515a58b03cb03c45b0406044
59012b2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f
3caf3c0575755943584012bf22cf22025f226f227f228f229f22af220675
7559435c58b6403c9f22ef220375592b2b01747474744544737374747575
454473454473744544737475737373737300757575737575752b2b757575
752b752b435841220063032d00010003032d0013032d0023032d0033032d
0053032d000500c3032d00d3032d00e3032d00f3032d00040083032d0093
032d00a3032d00b3032d0004032d032d4518694474747575592b4358b900
180332b330353238b80332b361663238b80332b3535a3238b80332b3454e
3238b80332b33c413218b80332b23f330a410f0332000100ba033200ca03
3200da033200ea033200fa03320005033203324518694474752b2b2b2b2b
2b597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373
737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b
2b2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b2b73
2b00732b752b2b732b2b2b2b2b2b2b2b2b73742b2b00000000>
[2177 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> OAAAAA+TimesNewRomanPSMT AddT42Char 
1 380 4 <00010025008d045b04c3000b009f401a2f022f0320082009042f00200520
062f0b6f006f0b0660060106410f035100070327000a0351000b00030327
0002035100000008032700090351b60b0b0060050105bd03510004000003
5100040327b70160080108bb060bb80327401a0560000100bb2002300240
027002d00205200201025c0c585e182b10f65d71f45d3cfd3ce45d002fed
e410e45d103c10f4ed10f4ed10f4fde45d3130005d015d25112135211133
11211521110217fe0e01f25001f4fe0c8d01f35201f1fe0f52fe0d00>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 746 6 <000100530180025802170003003f40200205801d64367f050101000200b0
030300021001500160019001a001d0010601b80134b5008004545a182b10
f6fd5d3c103c002fed3c103c3130015d2b13211521530205fdfb02179700
>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 836 7 <00010003ffe4023e058e0003005240090005cb1f6736000101b80327400d
02031402020303000002010b00b8011f40142003300360037003a003e003
0603bb01ad02cb04b8016fb1df182b10f6edf45ded003f3c3f3c87052e2b
7d10c431302b01012301023efe155001eb058efa5605aa00>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 950 8 <000100f000000306056800160097401440186018a018e018040018401802
76008600020e411301690141000901a00022000301690141000801a00023
000001f8000f016900160141000001f2400e010f0f020902010509080c02
0300ba01f70003014940120e0e0f401135300f7f0f900fa00f040f1917ba
022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c111239011139
00f5edfc01f52b2b3130005d01715d13253311141616171521353e023511
34272626232207f0014a21133c5cfe026038160a07251a254204c7a1fb87
72381e022525021d317a02dc942a201e1f00>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 1178 9 <0001002c000003ab0568001e0168408207180b3917181c3d3418401c3d34
19401c3d340f1e161629073c074907a9070640205b045a085b175a186b08
741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020f904f917
1515011d0419051b15191619171d180709170b180b1d3419471989178f20
0718190202171a190c19060d031902050618171615140713040db8016840
090940140c3f80090109b80333400c10051a8f19019f19af190219ba0333
0003018db301020c1eb8018d400d0006e24f135f136f137f130413b80107
4013400001001a002040208020036020a020022019bb01f90003000d0140
40145f026f027f028f02bf02cf02df02ef020802191fba018e010100182b
4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d713c3ffd
71b10602435458b78f0901bf09cf0902005d71592be41112173911123901
111239390210b10602435458b47d198d1902005d590e3c8710057dc40ec4
31300171725d005d012b2b2b002b01032135000035342623220607233636
33321615140706070207213236363703ab5ffce0016101209e6e649f2625
19cf9ba5dd304aa6f93e01626c57461a0105fefb2501420198a981a67571
b9c6d4906767a2b5fef03810312d>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 1642 10 <00010053ffe8035605680032014cb9000affe0b20c3909b8ffc0403c0c39
4109450a460b4b2204cf09012929382940346034cf34e034f70a07003401
41097f237a2eaa24b924ba2ec92edf23df25db2eea22e9250c490829b801
8cb328281000b802e4b3d0300130b80334b5030510160116b8019fb51d40
2b2f341db80143b3100d2928bb01680014000902e3400b50208020029020
a0200220b80333b3b00c010cb80190400b502d802d02902da02d022db803
33b55f077f070207b802e5400a403401a034c034023400b8013eb74013bf
1302131933ba011e01e800182b4e10f45d4de4105d71f65ded5d71f45ded
5d71e410f43c003fed2bed723fed5ded12392fed3130437940362e2f1e26
0a0f04062221232124212521040605250e26260a2062012f042d62011e0f
206201210b2762010a092e063062011f0d1d62002b2b103c2b012b2b2b2b
2b2a81818181005d01715d7200712b2b1336363332171615140716161514
070621222635343633321716161716333236353427262726262323353e02
353426232207683ab184a35742ba7d807092feeb89632f21191a11781725
2a6697231a1f2b964e204f9f4881609b68044a89956a4f5a949e31b67bb0
81a844271d2c08053f060b9e6c4f4b381d28411e0a5e844f677fa600>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 2120 11 <0001ffee01c50411020e0003001db900020327400a00001a050167044748
182b10e54e10f6002f4ded3130012135210411fbdd042301c549>OAAAAA+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>OAAAAA+TimesNewRomanPSMT AddT42Char 
OAAAAA+TimesNewRomanPSMT /CharStrings get begin
/space 1 def
/plus 4 def
/hyphen 6 def
/slash 7 def
/one 8 def
/two 9 def
/three 10 def
/endash 11 def
end
OAAAAA+TimesNewRomanPSMT /Encoding get
dup 32 /space put
dup 43 /plus put
dup 45 /hyphen put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 208 /endash put
pop
end
%ADOEndSubsetFont
/ZHYQFK+TimesNewRomanPSMT /OAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut/ZHYQFK+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen /.notdef /slash /.notdef /one /two /three 156{/.notdef}rp /endash 47{/.notdef}rp]ZHYQFK+TimesNewRomanPSMT nfZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf200.486 41.3093 mo(- 1)[5.99113 4.49796 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf219.971 41.3093 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf263.213 40.7918 mo(j )[4.99814 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf272.709 40.7918 mo(- 1/2)[5.99115 4.49796 8.99591 4.99814 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf306.189 40.7918 mo(\000\001)sh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /PAAAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000007da6670
676d000000000000089800000631676c79660000000000001ecc0000018e
686561640000000000000ecc00000036686865610000000000000f040000
0024686d74780000000000000f28000000086c6f63610000000000000f30
000000066d6178700000000000000f38000000206e616d65000000000000
0f580000002c707265700000000000000f8400000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b94000020063b80400885458b20240
0243604259595959592d2cb0024354584b53234b515a58381b2121591b21
212121592d0000000001000000050ccd571894305f0f3cf5081908000000
0000a2e31dc200000000c5b1f690fb74fd8c1000080e0000000900010000
00000000000100000721fe4500571000fb74fadf10000001000000000000
000000000000000000020639011c052500320000003b00c7000000010000
000200f2003c009d000700020010002f00560000062504eb000500020000
000100120001000000000006001800004c5a564557502b54696d65734e65
77526f6d616e50534d540000b9005403ecb3032a1f3f411503e4006003e9
009f03e500df03e50004001003e4001003e5003f03e5007003e400ff03e4
0005ffc003e1b345453240b803e1b32b2e3240b803e1b2282932b9ffc003
e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb24242
32b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de0002
03de03df0028001fffc003dfb3282e32f0410d03df0001037e000f010100
1f00a003dd00b003dd0002004003dab32426329fbf03cc000103ca03c900
64001fffc003c9b20d1132410a03c703b70012001f03b603b50064001fff
c003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d
0004006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f
03a7004f03a7000403ab03ab00ef03a50001000f03a5002f03a5006f03a5
008f03a50004005403aa0001006b03aa000103a8036a0022001f038c0394
0015001f038b03930015001f03a40393001a001f03a20394001e001f03a1
0393001e001f039f0394001e001f039b0394001a001f039a0393001e001f
039903940016001f039803940016001f03970393001b001f03960394001b
001f03950393001b001f03760375001a001f03740375001a001f03a00373
b21e1f10411e039300200393003003930003002003940030039400400394
00030000039400010383036c001e001f03b1036c0032001f036d036c0032
001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0
037d00d0037d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c
00b0037c00c0037c00d0037c000400300373004003730002000003730010
037300200373000300e0037300f00373000200b0037300c0037300d00373
0003008403730090037300a0037300030377036a0029001f0389036ab228
1f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100
400366b3090a3240b80366b3090e3240b80366b3090f323fbb0365000100
400365b3090c3240b80365b31a1d3240b80365b3090e326b410e0363007b
036300020014036300240363003403630044036300040363b2242f1fba03
4e006d0800400e1f7f027f037f047f050430440112bf033200500800001f
0012032d003c080040291f5f3c0137600970098009031009200930094009
5009056f037f038f03031f032f033f034f035f0305b8ffc0b2073a33b8ff
c04047063a33900ba00bb00bc00bd00b05b006c006d006e006f006052006
3006400650066006700680069006a006099006900702600b700b800b0310
0b200b300b400b500b051f0701a041850362000100000362001003620070
036200900362000400f0035f00010020035e0020035f0030035f0040035e
00040000035e0000035f0010035f00d0035e00e0035f00050010030f0020
030f0030030f00d0030f00e0030f00050000030f0010030f0050030f0060
030f0070030f00d0030f00060000030f0010030f0020030f0030030f00e0
030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e
0002030e004a00e0030d00f0030d0002030d002700d002fc0001001002fc
002002fc005002fc000300d002fc00e002fc0002000002fc001002fc0020
02fc003002fc005002fc006002fc000600e002fc00f002fc0002002002fc
003002fc004002fc000302fc406127c02901b02901a02901902901403c3f
413240223f41321212125f235f255f285fa5046f236f256f286fa5044f23
4f254f284fa5043f233f253f283fa5042f232f252f282fa5041f231f251f
281fa5048f4caf4cbf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8
ffc0b3b2222532b8ffc0b5b2191a32370f413b02af0001005f02af009f02
af00df02af0003001f02af002f02af003f02af006f02af000402af02af00
1f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02
ad001f02ad003f02ad005f02ad009f02ad0005005f02ad00df02ad000200
0f02ad001f02ad003f02ad0003004002acb23a334f414a02ac005f02ac00
9f02ac0003002f02ac003f02ac0002000f02ac003f02ac00af02ac000300
b002ac00e002ac0002004f02ac005f02ac00a002ac0003001f02ac002f02
ac003f02ac0003000f035a0001000f035a001f035a003f035a005f035a00
70035a000500cf035700df03570002000f0357001f03570070035700af03
570004035a035a0357035702ad02ad02ac02ac032c400d31151f00161600
0000121108104110020c004a000d01a8004a000d0198004a000d0189004a
000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe022800
41000d01940041000d0121400b410db4410d4f410d29410d411002170021
000d02150021000d02060021000d01eb0021000d014e0021000d012c4014
210df9210df3210df1210d9d210d71210d3d210d4110021c001f000d0214
001f000d020b001f000d0196001f000d014a001f000d0126400b1f0dc61f
0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b01
41000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c29
1fb801ffb23c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc
01f9010f0101001f01f6b224e41f411501f401490401001f01f301490401
001f01f1014900ab001f01f001490067001f01a6003c0125001f01a4b23c
811f411501a3010f019a001f01a200220801001f01a100500401001f019f
0149019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a
002c0101001f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2
259e1fb8016ab23c2a1f4111016700240201001f0163002502ab001f014c
010f019a001f01480149006c001f0147b22c891fb80145b22c9e1fb80144
b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb2
23e41f4115011d0023019a001f011c00230801001f011b00250801001f01
0e010f0401001f010d00220401001f0108b223811fb80106b425e41ff73c
bb0125001f00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901
490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21f
bf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21f
a523b80201400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f
006d010f0156400b1f592c3e1f4c3cab1f4625b80101b21f403cb8012540
0a1f3a23721f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb6
1f2a24e41f2623b80156b21f5537ba023500070175402c07740762075607
51073b0733072d0720071d071c071408120810080e080c080a0808080608
04080208000814b8ffe0402b000001001406100000010006040000010004
10000001001002000001000200000001000002010802004a00b013034b02
4b534201b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101
018e59b0382bb00288b801005458b801ffb101018e851bb0124358b90001
012f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a
515ab0052342180016763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d
594bb04753205c58b90271026f4544b90270026f45445958b9017a027145
5258b90271017a4459594bb04753205c58b9002202704544b9003c027045
445958b901b30022455258b9002201b34459594bb04c53205c58b9014900
224544b1222245445958b901c20149455258b9014901c24459594bb06753
205c58b9002402714544b90050027145445958b9021e0024455258b90024
021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00
010f455258b9010f0c004459594bb01c53205c58b125254544b12c254544
5958b13725455258b125374459594bb0ab53205c58b125254544b1232545
445958b901590025455258b9002501594459594bb8010153205c58b12525
4544b1282545445958b902080025455258b9002502084459592b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361
dc6463456523456023456560234560b08b766818b080622020b164dc4565
234520b003266062636820b003266165b0dc236544b064234420b1616345
65234520b003266062636820b003266165b063236544b0612344b1006345
5458b163406544b26140614523614459b3a67f434b456523456023456560
234560b089766818b080622020b1437f4565234520b003266062636820b0
03266165b07f236544b043234420b1a64b4565234520b003266062636820
b003266165b04b236544b0a62344b1004b455458b14b406544b2a640a645
236144594b5242014b5058b108004259435c58b108004259b3020b0a1243
58601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b0
0c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342
b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b01123
42002b0018456944456944456944456944737373747373737475752b7373
747475184569447373742b4bb021534bb046515a58b03cb03c45b0406044
59012b2b2b2b757575757575757543584010bf3ccf3c026f3c7f3c8f3c9f
3caf3c0575755943584012bf22cf22025f226f227f228f229f22af220675
7559435c58b6403c9f22ef220375592b2b01747474744544737374747575
454473454473744544737475737373737300757575737575752b2b757575
752b752b435841220063032d00010003032d0013032d0023032d0033032d
0053032d000500c3032d00d3032d00e3032d00f3032d00040083032d0093
032d00a3032d00b3032d0004032d032d4518694474747575592b4358b900
180332b330353238b80332b361663238b80332b3535a3238b80332b3454e
3238b80332b33c413218b80332b23f330a410f0332000100ba033200ca03
3200da033200ea033200fa03320005033203324518694474752b2b2b2b2b
2b597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373
737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b
2b2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b2b73
2b00732b752b2b732b2b2b2b2b2b2b2b2b73742b2b00000000>
[399 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 118 1 <00020032000004f2056b0003000600ec404348057a058a05990504051810
12340218101234032c0b1134042c091134250379068806f706040c021b02
020a011a017a018a01f801050b051b05580503050504010000b802c94016
06051406060505040506042203021403030204060306b802c9b2000805b8
0205401502010302010003a7200470048004030f0440040204b801b2400f
0500901f062f066f067f068f060506b802ec40151f05014f05af05df05ef
05048005af050205050807191112392f5d7172f45d18ed1910f45d5d18ed
113939003f3ced3fed3c103c87052e2b087d10c487052e182b87087dc431
30015d5d5d5d2b2b2b2b005d3301330127010132026022023eeffe6bfe4a
056bfa955503e4fc1c00>PAAAAA+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c0>PAAAAA+TimesNewRomanPSMT AddT42Char 
PAAAAA+TimesNewRomanPSMT /CharStrings get begin
/Delta 1 def
end
PAAAAA+TimesNewRomanPSMT /Encoding get
dup 33 /Delta put
pop
end
%ADOEndSubsetFont
/ZHYQFL+TimesNewRomanPSMT /PAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut/ZHYQFL+TimesNewRomanPSMT*1 [33{/.notdef}rp /Delta 222{/.notdef}rp]ZHYQFL+TimesNewRomanPSMT nfZHYQFL+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf301.09 411.283 mo(!)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf312.66 411.283 mo(x)sh320.646 411.283 mo( )shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf325.144 411.283 mo(/ 2)[4.99814 4.49796 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf343.636 411.283 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf413.99 41.2958 mo(j )[4.99814 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf423.487 41.2958 mo(+ 1/2)[10.1473 4.49796 8.99591 4.99814 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf461.122 41.2958 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf500.208 40.7783 mo(j )[4.99811 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf509.705 40.7783 mo(+ 1)[10.1473 4.49799 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf533.346 40.7783 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf570.557 41.2958 mo(j )[4.99811 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf580.054 41.2958 mo(+ 3/2)[10.1473 4.49799 8.99591 4.99811 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf617.689 41.2958 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf628.538 208.129 mo(n)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf637.534 208.129 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf608.517 276.554 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf622.011 276.554 mo(\320 1/)sh649.499 276.554 mo(2)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf658.495 276.554 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf615.125 346.792 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf628.619 346.792 mo(\320 1)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf651.109 346.792 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf608.437 135.441 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf621.931 135.441 mo(+ 1/2)[10.1473 4.49799 8.99591 4.99811 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf659.566 135.441 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf615.93 68.8854 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf629.423 68.8854 mo(+ 1)[10.1473 4.49799 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf653.064 68.8854 mo(\000\001)sh355.954 349.468 mo
355.954 346.212 358.048 343.572 360.632 343.572 cv
363.215 343.572 365.309 346.212 365.309 349.468 cv
365.309 352.725 363.215 355.365 360.632 355.365 cv
358.048 355.365 355.954 352.725 355.954 349.468 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
355.954 349.468 mo
355.954 346.212 358.049 343.572 360.632 343.572 cv
363.215 343.572 365.309 346.212 365.309 349.468 cv
365.309 352.725 363.215 355.364 360.632 355.364 cv
358.049 355.364 355.954 352.725 355.954 349.468 cv
cp
.686061 .353338 .0289006 0 cmyk
9525 lw
gsave
[7.87043e-05 0 0 7.86947e-05 355.954 343.572 ]ct
@
grestore newpath
355.941 67.3476 mo
355.941 64.0912 358.035 61.4515 360.618 61.4515 cv
363.201 61.4515 365.295 64.0912 365.295 67.3476 cv
365.295 70.6039 363.201 73.2436 360.618 73.2436 cv
358.035 73.2436 355.941 70.6039 355.941 67.3476 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
355.941 67.3476 mo
355.941 64.0913 358.035 61.4515 360.618 61.4515 cv
363.201 61.4515 365.295 64.0913 365.295 67.3476 cv
365.295 70.6039 363.201 73.2436 360.618 73.2436 cv
358.035 73.2436 355.941 70.6039 355.941 67.3476 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 355.941 61.4515 ]ct
@
grestore newpath
431.876 278.254 mo
431.876 274.998 433.97 272.358 436.553 272.358 cv
439.137 272.358 441.231 274.998 441.231 278.254 cv
441.231 281.51 439.137 284.15 436.553 284.15 cv
433.97 284.15 431.876 281.51 431.876 278.254 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
431.876 278.254 mo
431.876 274.998 433.97 272.358 436.553 272.358 cv
439.137 272.358 441.231 274.998 441.231 278.254 cv
441.231 281.51 439.137 284.15 436.553 284.15 cv
433.97 284.15 431.876 281.51 431.876 278.254 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 431.876 272.358 ]ct
@
grestore newpath
511.617 349.469 mo
511.617 346.212 513.711 343.573 516.294 343.573 cv
518.878 343.573 520.972 346.212 520.972 349.469 cv
520.972 352.725 518.878 355.365 516.294 355.365 cv
513.711 355.365 511.617 352.725 511.617 349.469 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
511.617 349.469 mo
511.617 346.212 513.711 343.573 516.295 343.573 cv
518.878 343.573 520.972 346.212 520.972 349.469 cv
520.972 352.725 518.878 355.365 516.295 355.365 cv
513.711 355.365 511.617 352.725 511.617 349.469 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 511.617 343.573 ]ct
@
grestore newpath
511.992 210.03 mo
511.992 206.774 514.086 204.134 516.67 204.134 cv
519.253 204.134 521.347 206.774 521.347 210.03 cv
521.347 213.286 519.253 215.926 516.67 215.926 cv
514.086 215.926 511.992 213.286 511.992 210.03 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
511.992 210.03 mo
511.992 206.774 514.087 204.134 516.67 204.134 cv
519.253 204.134 521.347 206.774 521.347 210.03 cv
521.347 213.286 519.253 215.926 516.67 215.926 cv
514.087 215.926 511.992 213.286 511.992 210.03 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 511.992 204.134 ]ct
@
grestore newpath
511.858 67.3476 mo
511.858 64.0912 513.952 61.4515 516.535 61.4515 cv
519.119 61.4515 521.213 64.0912 521.213 67.3476 cv
521.213 70.6039 519.119 73.2436 516.535 73.2436 cv
513.952 73.2436 511.858 70.6039 511.858 67.3476 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
511.858 67.3476 mo
511.858 64.0913 513.952 61.4515 516.535 61.4515 cv
519.118 61.4515 521.213 64.0913 521.213 67.3476 cv
521.213 70.6039 519.118 73.2436 516.535 73.2436 cv
513.952 73.2436 511.858 70.6039 511.858 67.3476 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 511.858 61.4515 ]ct
@
grestore newpath
431.876 136.691 mo
431.876 133.435 433.97 130.795 436.553 130.795 cv
439.137 130.795 441.231 133.435 441.231 136.691 cv
441.231 139.948 439.137 142.587 436.553 142.587 cv
433.97 142.587 431.876 139.948 431.876 136.691 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
431.876 136.691 mo
431.876 133.435 433.97 130.795 436.553 130.795 cv
439.137 130.795 441.231 133.435 441.231 136.691 cv
441.231 139.948 439.137 142.588 436.553 142.588 cv
433.97 142.588 431.876 139.948 431.876 136.691 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 431.876 130.795 ]ct
@
grestore newpath
587.232 277.531 mo
587.232 274.275 589.327 271.635 591.91 271.635 cv
594.493 271.635 596.587 274.275 596.587 277.531 cv
596.587 280.788 594.493 283.427 591.91 283.427 cv
589.327 283.427 587.232 280.788 587.232 277.531 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
587.232 277.531 mo
587.232 274.275 589.327 271.635 591.91 271.635 cv
594.493 271.635 596.587 274.275 596.587 277.531 cv
596.587 280.788 594.493 283.427 591.91 283.427 cv
589.327 283.427 587.232 280.788 587.232 277.531 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 587.232 271.635 ]ct
@
grestore newpath
587.057 137.871 mo
587.057 134.614 589.151 131.975 591.735 131.975 cv
594.318 131.975 596.412 134.614 596.412 137.871 cv
596.412 141.127 594.318 143.767 591.735 143.767 cv
589.151 143.767 587.057 141.127 587.057 137.871 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
587.057 137.871 mo
587.057 134.614 589.151 131.975 591.735 131.975 cv
594.318 131.975 596.412 134.614 596.412 137.871 cv
596.412 141.127 594.318 143.767 591.735 143.767 cv
589.151 143.767 587.057 141.127 587.057 137.871 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 587.057 131.975 ]ct
@
grestore newpath
279.616 278.281 mo
279.616 275.025 281.71 272.385 284.293 272.385 cv
286.877 272.385 288.971 275.025 288.971 278.281 cv
288.971 281.537 286.877 284.177 284.293 284.177 cv
281.71 284.177 279.616 281.537 279.616 278.281 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
279.616 278.281 mo
279.616 275.025 281.71 272.385 284.293 272.385 cv
286.877 272.385 288.971 275.025 288.971 278.281 cv
288.971 281.537 286.877 284.177 284.293 284.177 cv
281.71 284.177 279.616 281.537 279.616 278.281 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 279.616 272.385 ]ct
@
grestore newpath
279.375 137.871 mo
279.375 134.614 281.469 131.975 284.053 131.975 cv
286.636 131.975 288.73 134.614 288.73 137.871 cv
288.73 141.127 286.636 143.767 284.053 143.767 cv
281.469 143.767 279.375 141.127 279.375 137.871 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
279.375 137.871 mo
279.375 134.614 281.469 131.975 284.053 131.975 cv
286.636 131.975 288.73 134.614 288.73 137.871 cv
288.73 141.127 286.636 143.767 284.053 143.767 cv
281.469 143.767 279.375 141.127 279.375 137.871 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 279.375 131.975 ]ct
@
grestore newpath
199.634 350.042 mo
199.634 346.786 201.728 344.146 204.312 344.146 cv
206.895 344.146 208.989 346.786 208.989 350.042 cv
208.989 353.298 206.895 355.938 204.312 355.938 cv
201.728 355.938 199.634 353.298 199.634 350.042 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
199.634 350.042 mo
199.634 346.786 201.728 344.146 204.312 344.146 cv
206.895 344.146 208.989 346.786 208.989 350.042 cv
208.989 353.298 206.895 355.938 204.312 355.938 cv
201.728 355.938 199.634 353.298 199.634 350.042 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 199.634 344.146 ]ct
@
grestore newpath
199.875 208.767 mo
199.875 205.511 201.969 202.871 204.553 202.871 cv
207.136 202.871 209.23 205.511 209.23 208.767 cv
209.23 212.023 207.136 214.663 204.553 214.663 cv
201.969 214.663 199.875 212.023 199.875 208.767 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
199.875 208.767 mo
199.875 205.511 201.969 202.871 204.553 202.871 cv
207.136 202.871 209.23 205.511 209.23 208.767 cv
209.23 212.024 207.136 214.663 204.553 214.663 cv
201.969 214.663 199.875 212.024 199.875 208.767 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 199.875 202.871 ]ct
@
grestore newpath
199.875 67.3476 mo
199.875 64.0912 201.969 61.4515 204.553 61.4515 cv
207.136 61.4515 209.23 64.0912 209.23 67.3476 cv
209.23 70.6039 207.136 73.2436 204.553 73.2436 cv
201.969 73.2436 199.875 70.6039 199.875 67.3476 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
199.875 67.3476 mo
199.875 64.0913 201.969 61.4515 204.553 61.4515 cv
207.136 61.4515 209.23 64.0913 209.23 67.3476 cv
209.23 70.6039 207.136 73.2436 204.553 73.2436 cv
201.969 73.2436 199.875 70.6039 199.875 67.3476 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 199.875 61.4515 ]ct
@
grestore newpath
123.829 276.935 mo
123.829 273.679 125.923 271.039 128.507 271.039 cv
131.09 271.039 133.184 273.679 133.184 276.935 cv
133.184 280.192 131.09 282.831 128.507 282.831 cv
125.923 282.831 123.829 280.192 123.829 276.935 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
123.829 276.935 mo
123.829 273.679 125.923 271.039 128.507 271.039 cv
131.09 271.039 133.184 273.679 133.184 276.935 cv
133.184 280.192 131.09 282.831 128.507 282.831 cv
125.923 282.831 123.829 280.192 123.829 276.935 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 123.829 271.039 ]ct
@
grestore newpath
122.199 136.575 mo
122.199 133.319 124.293 130.679 126.876 130.679 cv
129.46 130.679 131.554 133.319 131.554 136.575 cv
131.554 139.832 129.46 142.471 126.876 142.471 cv
124.293 142.471 122.199 139.832 122.199 136.575 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
122.199 136.575 mo
122.199 133.319 124.293 130.679 126.876 130.679 cv
129.459 130.679 131.554 133.319 131.554 136.575 cv
131.554 139.832 129.459 142.471 126.876 142.471 cv
124.293 142.471 122.199 139.832 122.199 136.575 cv
cp
gsave
[7.87043e-05 0 0 7.86947e-05 122.199 130.679 ]ct
@
grestore newpath
288.327 409.745 mo
279.818 409.745 li
279.818 361.964 li
288.327 361.964 li
288.327 409.745 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[9.16363 0 0 48.4364 279.491 156.927 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 148 
/M[28 0 0 -148 0 148 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_Z9K5m/Zq_m/Zq_!!)Eeq#Tpao`=R_o`=R_o`=XarrE$!qZ?`tnc8XirrW-$!!<*"o)Saj
rrW-$!!<*"o)SajrrW-$!!<*"o)Jmo!<N?*r<*6*!WiB'oDnjk!WiH,r<36*!s8H&o`4sl!WiH,r<36*
!s8H&o`4sl!WiH,r<36*!s8H&o`,-r!<N?+"oSW/"U"o/!<MlorW**&"9f&0#R1M="U"l-!VQNm!<WB*
"U=o1"U5,4!W`>q!<*!$!WrT1r<EK1"Tnf,!VQKt!<E6("U583$3geB"pG)1!VQL*!<E6)"pYJC$k*LN
#6b53!<Mop&HMn6!sJo9$4@4K#mUV9!W`>r!"f54!WrT2#mq%J$4-q@!s/K(pAbBu!WrT2#n6bB"q1eB
"Tnf,pAbBu!<WK1$4ZqF"q:nE"9SZ*pAb<s!<WK1$jd=P%hB-Y#mUS8!<Mop&HMn7"U>>B%M''[$OI%@
!s&Gs!"f55"9o/A&/,`l'+YKX"U"l-p](s.!<NB/$4RR]()@Pp%13:B!W`>t!#,G7!WrW5$kO$c'G:ob
#mCD4!<E2s!##A6!WrW5$kEsa'+k`_#mCD4!<Mur'*/.:"UGMJ'c7i-(DIAg#6b21!Vl^/!<E6)#7M.Y
(`=2.'G(WW"9JT)q#D'/!<NB/$P!gc(Ddi"%LNFD!W`>t!!`N*!X&`9%MK3b(Ddf!%LNFD!W`>t!##A7
!sJu@',_f4*uu13%LE:@!<Mur'*/+9"UPVO(`XS<)]'+r#R(;2!Vl^/!<E9+#Rh:\)&jM3'bCcY"Tnc+
q#D'/!<WK2$kX3l)]KV/&.8^H!s&H%!;lg1!<NB.$P4*p+XA<U*#9%l"p=u.q#D'/!WrW6%hop(+<V^C
'+P<Q!s&Gu!##A7!sJu@&f;T/*?,e-%1!+>!<Mur'*/.:"UPVN(E4A8)]'(q#R(;2!Vl^%!<WH0$kaC"
,ps!H,Tdg7$O6e9!Vl^/!<NB.$4msm+<i!P)\ikj"p=r-q#D'/!WrT4%MTd$+!2L?'+P<P!s&Gu!##A7
!sJu@',_f4*uu13%1*1?!<Mur'*/1=#7V=b+X\]f-Qj9>$jQq;!W2rs!##A7":#8F(*"MD,U"-C&./XF
!<Mur'*/.:"pkeS)BU+G*Z5Y%#mLJ4!Vl^/!<N?-#nI^f*ZuRH)&!Jd"p4l,q#D'/!sJr>'H85F.k<"k
)A<Mb"Te`#!"/f/":#;H(*+SF,pER6((^fX"9AQ!!##A7!sT)D'H/&:+WhU:%g`FB!<Mur'*/.:"ptkT
)BU+G*Z5V%#mLJ4!Vl^/!<WK2%M]p-.4d#!+rV.)#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ"!#,D6
!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=
!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#Cj)!WrW6&/?-,+sJ*I'Eo!R"p4l,q#D'/!WrW6%i$$++sJ*I
'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk
+<i!O)AE\g"p4l,q#CBq&cr.>$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7
":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^+!<N?-$4djj+<i!O)AE\g!sSi.
!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;
%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl]s!<WK:#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r
,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur&HMt;
#S%Rh,UtAt.3fcG%1!+<!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,
q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s"9AQ,#7D"R(EOeI,pF?F
&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK
/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-
$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur
"p"c-"ptnV$l^<5+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+
#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!#5M9!sT)D'cS8>+s.^;%g`FB!<E0#qZ%91!WrW6%i$$+
+sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-
$4mpk+<i!O)AE\g"p4l,q#C[$!WrW6%i$$+$6gZ9)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#
!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g
"p4l,r;ccr'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,
+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur$3:54#S%Rh,UtAt#Upu;'Fb<O!Wi)s'*/.;
#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu
!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi/u'`\47!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;
%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#Cg(!X&`9&JlK5
,pa`U"r7aW#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=
#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&H$
!;um2!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F
&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^&!<N?-$4djj+<i!8*uYh(#mLJ4!Vl^/!<WK2%M]s/
.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:
"ptkU)^$=K*uYh(#mLJ4!W)j3!!!$%"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7
!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!"8l1"UGSQ*$d!c/L_nK
)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj
+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:
"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#
!"K#2":#;H(EOeI,pF?F&-N=F"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(
#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!!**%&H`4E&/?-,
+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/
$P=0r,:+W[*>T1n#6Y&.q#Cs,!WrW6&/?-,+sJ*I'FtKS!WrH(q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu
!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g
"p4l,q#CKt!WrW;$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI
,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^.!<N?-$4djj+<i!O)AE\g"p4l+!Vl^/!<WK2
%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur
'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^!!<WK2%M]Em,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n
#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'EJ:>#S%Rh,UtAt
.3fcG%1!+=!<Drr'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6
%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s#6=l/#7D+[*Xa2=,pF?F&./XF!<Mur
'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e
"Te`#!##A7":#;H(EOeI,pF?F&./XF!<N0"qu@B2!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>
+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#C^%!WrW6
&/?-,+pfG8)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s
'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,quH]r'*/.:"ptkU)^$=K*uYh(
#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>
+s.^;%g`FB!<Mur$NU;2"ptkU)^$=K*sW\u%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/
$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<N#s
'EA.9"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g
"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!"Ar2"UGSQ*$d!c/L_n`"V_CO"Te`#!##A7":#;H(EOeI
,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?
'c\JK/M/Cr)\`_e"Te`#!!!$4!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur
'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#Cp+!X&`9&JlK5,pa`U((^fT
#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt
.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#CHs!Wru<$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6
%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^-
!<N?-$4mpk+<i!O)AE\g"p=l+q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O
!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#CNu!WrW6%M'9n+<i!O
)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV
)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7
":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,
q#CU"!sJr?'c[W-.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;
%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^1!<WK2%M]s/.P35$,9%=+#R(81!!)lr'*/.;#7D+[
*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8
"UGSQ*$d!c/L_n`'Fb<O!Wi)s#QXu0#7D+[*[;"<,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4
!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F
&./XF!<N-!r;[K3!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh
,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#Ca&!WrW6&/?-,+sI:7)AE\g"p4l,q#D'/
!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7
!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,qZ%?2!!*-'"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$
,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur$ipD3"ptkU
)^$=K*uY=t%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/
!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=
!W<#s!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O
)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!"&`.":#;H(EOeI,mY\8((^fX"9AQ!!##A7!sT)D
'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/
!X&`9&JlK5,pa`U((^fX"9AQ#!#5J6!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS
!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^(!<N?-$4mpk+<i!O
)?pld#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H
(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/
!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4
!Vl^*!<N?-$4djj+<i!O)AE\b#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U
((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl]r!<Wo;#S%Rh
,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7
!sT)C'cS8>+s.^;%g`FB!<Mur&-2k:#S%Rh,UtAt.3fcG%1!"=!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7
!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`
'Fb<O!Wi)s!s&H+#7h1S(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj
+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!"o;6":#;H(EOeI,pF?F&./XF!<</r!##A7
!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81
q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!!NB)!sT)D%2Bg)+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;
%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D*0!WrW6&/?-,
+sJ*I'FtKS!s&E&q>_00!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;
#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#CX#!WrW6%i$#k+<i!O)AE\g"p4l,
q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(
#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,rW)ir'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r
,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur#lt,3
#S%Rh,UtAP/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,
q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi3!rW!T4!X&`9&JlK5,pa`U
((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/
.P35$,9%=+#R(81q#Cd'!X&`9&JlK5,pa`?*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7
!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.
q>_30!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`
'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^)!<N?-$4mpk+<i!O)AE>c#mLJ4!Vl^/!<N?-$4djj
+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:
"ptnV)^$=K*uYh(#mLJ4!Vl]q!>5G9"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81
q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur%fl_6"ptkU)^$=K*uYh(
#m1A6!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,
+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur!W`B,&-ra\*$d!c/L_n`'Fb<O!Wi)s'*/.;
#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu
!"f56"UGSQ*$d!c/L_n`'Fb<O!<N;t!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(
#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!!E<(":#;E&JlK5
,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2
%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur
'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX
"9AQ!!!WH*!sT)D'au$(+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt
.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D-1!WrW6&/?-,+sJ*I'FtKS!s&E&!;ca0!<N?-
$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur
'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^$!<N?-$4djj+:9;:*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+
#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K
*uYh(#mLJ4!W<#s!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-
$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!"&`/"UGSQ*$d!c/I3dM)\`_e"Te`#
!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g
"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`%!#5J6!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,
+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^(!<NB/
$P=0r,:+W[*<m8j$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu
!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g
"p4l,r;ccr'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5
,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur$3:21"ptkU)^$=K#Tjs!%g`FB!<Mur'*/1=
#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu
!##A7!sT)C'cS8>+s.^;%g`FB!<N&t'`\47!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F
&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#Cg(!sJr?'c\JK
/M/Cr"re6c#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:
"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ!
!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+
#R(81q#Cm*!X&`9&JlK5,pa`U((^TU#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS!s&Gu!##A7!sT)C'cS8>
+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#CEr!YGM=
$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s
'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^,!<N?-$4mpk+<i!O)AE\g"p+l-!Vl^/!<N?-$4djj+<i!O)AE\g
"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K
*uYh(#mLJ4!Vl]t!<N?-%gig^)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$,9%=+#R(81q#D'/!X&`9
&JlK5,pa`U((^fX"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur&ci%9"ptkU)^$=K*uYh(#mLJ4!!2lq
'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6&/?-,+sJ*I'FtKS
!s&Gu!##A7!sT)C'cS8>+s.^;%g`FB!<Mur"T\]/#S%RY*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW
+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS!s&Gu!#,G9"UGSQ
*$d!c/L_n`'Fb<O!W`;t!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!Vl^/
!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e"Te`#!!`N+":#;H(ENr/,pa`U((^fX
"9AQ!!##A7!sT)D'cS8>+s.^;%g`FB!<Mur'*/.:"ptkU)^$=K*uYh(#mLJ4!Vl^/!<WK2%M]s/.P35$
,9%=+#R(81q#D'/!X&`9&JlK5,pa`U((^fX"9AQ&!;lg1!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6
%i$$++sJ*I'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^%
!<N?-$4mpk+<h+9*uYh(#mLJ4!Vl^/!<N?-$4djj+<i!O)AE\g"p4l,q#D'/!sJr?'c\JK/M/Cr)\`_e
"Te`#!##A7":#;H(EOeI,pF?F&./XF!<Mur'*/.:"ptnV)^$=K*uYh(#mLJ4!W2rs!##A7!sT)C'cS8>
+s.^;%g`FB!<Mur'*/1=#S%Rh,UtAt.3fcG%1!+=!Vl^/!<NB/$P=0r,:+W[*>T1n#6Y&.q#D'/!WrW6
&/?-,+sJ*I'FtKS!s&Gu!"/f/!sT)C'cS8>+s.%.'FtKS!s&Gu!##A8"UGSQ*$d!c/L_n`'Fb<O!Wi)s
'*/.;#7D+[*[;sW+rqF1$3p\7!Vl^/!<N?-$4mpk+<i!O)AE\g"p4l,q#D'/!WrW6%i$$++sJ*I'FtKS
!s&H!!#,D6!sJr?'c\JK/M/Cr)\`_e"Te`#!##A7":#;H(*+SF,pF<E&./XF!<Mur'*/.:"ptnU)BU+G
*uYh(#mLJ4!Vl^/!<N?-$4dgh+!DdK)&*Sf"p4l,q#Cj)!sJr?'cSAH/1`4o)[-ob#R(81q#D'/!X&`8
&/H91,U=NQ((^fX"9AQ!!##A7!sT&B'H/&:+W_O9%LE=A!<Mur'*/.:"pkeS)BL"D*Z5V$#mLJ4!Vl^/
!<WK2%29a+.4Zns+rV+(#R(81q#CBq&cr1?$4msm+X83S)\ink"p=r-q#D'/!WrT4%MTd%+<V[A'+P<P
!s&Gu!##A7!sJu@',_i6+<;:4%LE:@!<Mur'*/1=#7V=b+Xefi-Qj9?$jQq;!Vl^+!<N?-$4dgh+!DdK
)&!Jd!sSi.!Vl^/!<N?,#n@Rb*$-.?(D7/_"Tnc+q#D'/!WrT4%2'Hr*Zc7:&If!L!s&Gu!##A8":#>J
(a(+Q-mTlN&ISgH!Wi)s'*/+9"UPYP(`XS<*#B4s#R(;2!Vl]s!<E96"UGPL()e,2)&3\k#6b21!Vl^/
!<E9+#Rq@\)&jM4'bCcY"Tnc+q#D'/!X&]8&JlH3,U=NQ((^fW"9JW"!##A6!sAl<&/?'$)As8$$jQn;
!<Mur&HMn7":#;F',DE%()%/c#6Y//!Vl^/!<E9*#7D%U()Ic&'+PBT"9SZ*q#D'/!X&Z6%MTd%+<V^C
'+P<P"9AQ!!##A6!X&`8%2'Bk().>i$3gV7!<Mur'*/+8!sT&?&/,`l&eGHX"Tnf,!Vl]u!<E6("qCqJ
&/,`l&e>BW"Tnf,!Vl^/!<N?,#Rq=\)&jM3'bCcY"Tnc+p](m,!<WK2$P!^\&eGKZ#6b21!VZR+!<E9+
#7:nN&.f?\#mUV9!<Mop&ci"8"U>AD%hK9_$jd.B!s&E&p](m,!X&]7%M9Bj().;h#mLM6!VZR+!<E6)
"pbPE%1N^Q#R1D5!<Mop&HMn6!sJo9$OdFO#mUV9!W`>r!!WH)!WrT2$2k59#mUV9!W`>r!!NB)!sJo:
$OmRV%h9$U#6b22!VZTn!=Ju4"pYD?#m^b>"9SQ'pAk0n$NgM8#6tM?#6k>6!r`5p!<*!,!sAc4#7(S?
"pG)1rW2`n&HMn6"9f#:$4@4K#R1G7!W`?$!;QWo!=8i2"9eu6"U"r0rW2ZlrW*'&!sJQ+!X&T,rW2Zl
rW*'&!sJQ+!X&T,rW2Zl%fl\4"9er5#6tG:"Tnf,!V?Bk!<N<)!sA`0!s8W(!V6<j!<<2u!rrE%!V6<j
!<<2u!rrE%!V6:#!<E6("9\l3"9\f.!<M`kquQg!quQTnq#L<nrrW*!nGrIfrrW*!nGrRirW<*%rW<*#
n,W1`mf<4cr;l?epAs^_pAsU\r;l-_r;lKipAk-mklCY_X8mhPkl?;8TE'K~>

%%EndBinary
grestore
np
284.053 363.96 mo
284.053 404.659 li
.750271 .679713 .654902 .901945 cmyk
19050 lw
gsave
[7.87043e-05 0 0 7.86947e-05 284.053 363.96 ]ct
@
grestore newpath
364.909 409.418 mo
356.4 409.418 li
356.4 361.309 li
364.909 361.309 li
364.909 409.418 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[9.16363 0 0 48.7636 356.073 157.255 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 149 
/M[28 0 0 -149 0 149 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_>sH6lN$e_lN$e_rrDEdqZ6*bp&XX_p&XX_p&X^arrDuur;us!nGrLgqZ?]so)S^iqZ?]s
o)S^iqZ?]so)SdkrrW'"!!<-#oDnjk!<NB$"9AT+r;lQkrW*!#rW<9+"9S`-r;lQkrW*!#rW<9+"9S`-
r;lQk"9AN)!sJN*"U"o/!W`>q!<*!$!WrQ0r<EK0"9S]+!VQNm!=])4"9eu7"pP56!s/K(p&P'm%0?V7
"U529"pG,3!W`>q!"]/3!WrQ/#7(VA#R1G8!s/Ms!!WH)!WrT2#lP)4#R:J7rW2`n"p"`+!sJl6r<WQ2
"p>&-!VZQu!<E6("U551#m1D:"9\W(pAbd+!<WH/#RUtL%1ERL"U"l-!VZR+!<E9*#7:kL%hB*W#mLM6
!<Mop"9AN*"9o8@$OmRU$jm7D"9JT)pAbBu!<WH/#n-_A#7LqF"U"l-!VZR+!<NB-#Rh1T&eY`c$O6h;
!Wi&r'*/+8"9o/A&/#Wi&e>BV"Tnf,!Vl^0!<E6("UGMH&/#Te%LWLF!s/K(!;Z[/!<E6("UGJG&.oKc
%1<CE!s/K(q#D'/!WrT2$P*md(Ddi"%LNCC!s&Gu!##A6!X&`9%hf]q(`!_o$3p\8!<Mur'*/+8":#8D
&el)s'G(]["p4o-!Vl^#!<E6)#7:nP$PX<j'+bTZ"p4o-!Vl^/!<N?,#n@Ra)]]q;((gr\"Tnc+q#D'/
!<WK3%2'Ep*#oh3&.AdH!s&Gu!##A6!sJr=&/5s")&Ett$O6e:!<Mur'*/+9"UGJI'GhW)(D@;e#6Y,0
!WE)s!##A7"9o5E()nA?+WhU:%LE:A!Wi)s'*/.:"pthS)''e@*#K=u#mCD3!Vl^/!<N?,#n7L`)B9_8
((gr\"Tnc+q#D'/!WrT4%2'Hq*#oh2&I\pK!s&Gu!!rZ.":#>I(`stL#ppi:(D$rY"9JW"!##A7":#8F
()n>>+s.[:%LN@A!<Mur'*/.:"pkbR(`XV>*#B4s#mCD3!Vl^/!<N?-#n@Uc*$-.?(D7/`"Tnc+q#D'/
!sJr>',hu?.4HPb(_I/\"9JW%!<)s3!<NB/$P4'n+X83T)\ikj"p=r-q#D'/!WrW6%hop'+<V^B'+P<P
!s&Gu!##A7!sT)C'H%r7+<D@5%1*1?!<Mur'*/1=#S%Of+t+oj-m0B?$jQq;!Vl^'!<NB/$kO3q+seNZ
#94Ki$3gV6!Vl^/!<N?.$P*sj+!DdL)&*Pe"Tnc+q#D'/!WrZ8%i$!)+X%mE'+G6O!s&Gu!##A8"UPYQ
*$Zm`/1D_\&e,'L!Wi)s'*/.;#7M1]*[2mV+rh@0$3gV6!Vud1!!*-'#7D(Y)]p4H*uYh'#mCD3!Vl^/
!<N?.$P*sk+!DdK)&*Pe"Tnc+q#D'/!sJu@'cePK/1`4o)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE
!<Mur%06M4#7D(Y)^$=K*uYgs%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$
+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur!!*]6!s]2E
'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/
!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!"T)3!s]2E'cS8>+s.[:%LE4@!s&Gu!##A8"UPYR*@**d/L_k_'+G0M
!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H
'FkEQ!s&Gu!!30'"V:tM'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y
)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D!-!sJu@'cePL/M/Cq)\WYc"T\Z*q#D'/
!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3
!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#CNu!X&`:%M9O!,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I
'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t
,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=
#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#CU"!WrZ8&/GZn+<i!O)AEYf"Tnc+
q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0
$3gV6!Vl^1!<N?.$P4'm+<i!O)AEYf"Tnc+!!)lr'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0
.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur#QXu/
#7D%W)^#J3+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-
q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<N-!r;[K3!sJu@'cePL/M/Cq
)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk
+<i!O)&*Pe"Tnc+q#Ca&!sJu@'cePL/M.5W+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7
!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0
qZ%?2!!*-(#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H
'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s$ipD4#7M1]*[;sW+rge&&./UE!<Mur'*/.:#7D(Y
)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7
":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!W<#s!##A7!s]2E'cS8>+s.[:%LE:@
!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I
'FkEQ!s&Gu!"&`.!s]2E'cS8>+p]8.'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]
*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&H"!#5J6
!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@
!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^(!<WK3%M^!0.P35$+pJu"%0m%<!Vl^/!<NB/$kX<t,:+W[
*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j
,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7
!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^*!<NB/$kX<t,:+W[*#9(g$3gV6
!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_
'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl]r!<Ni8#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk
+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur&-2h7
#7D(Y)^$=K*uYh'#mCA4!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0
q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur!s&H*#7h1Q'cS8>+s.[:
%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-
+sJ*I'FkEQ!s&Gu!"o;6!s]2E'cS8>+s.[:%LE:@!<</r!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;
#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu
!!NB*"UPYR%36]D/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'
#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D*0!sJu@'cePL/M/Cq)\WYc"Te])q>_00!X&`:&JuQ6
,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3
%M^!0.P35$+r_1)#6b/0q#CX#!X&`:&JuPs,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu
!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m
"p=r-rW)ir'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL
/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur#lt)0#7D(Y)^$=2+s.^;%LE:@!<Mur'*/.:
#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!
!##A7!s]2F()nA?+s.^;%LE:@!<N)urW!T4!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_
'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#Cd'!WrZ8%i$$+
+sJ*6)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:
#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q>_30!<WK3%M^!0.P35$+r_1)#6b/0
q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&
#mCD3!Vl^)!<WK3%M^!0.P35$+r^\!%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-
+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl]q!>5G:
#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu
!##A8"UPYR*@**d/L_k_'+G0M!Wi)s%fl_7#7M1]*[;sW+rh@0$3LJ8!<Mur'*/.:#7D(Y)^$=K*uYh'
#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ
,pF<E&./UE!<Mur!W`?)&-iRS()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3
%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!"f55!s]2F()nA?+s.^;%LE:@rrMoq
'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW
"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur"9AQ+#7D"P'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt
.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E
'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/
!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur"p"f0#n@[j$m[;S/L_k_'+G0M
!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H
'FkEQ!s&Gu!#5M:"UPYR*@**d/L_k_'+G0M!W`9$qZ%91!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F
()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#C[$
!X&`:&JuQ6$7-uB*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@
!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-r;ccr'*/.:#7D(Y)^$=K
*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I
(`jnJ,pF<E&./UE!<Mur$3:21#7D(Y)^$=K#Tjs!%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/
!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@
!<N&t'`\47!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW
+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#Cg(!WrZ8%i$$++sJ*H"r%OR"Tnc+q#D'/!sJu@
'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/
!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`'!;um2!<NB/$kX<t,:+W[*#9(m
"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt
.3]]E%0m%<!Vl^&!<NB/$kX<t,:+WA+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8
%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!W)j3
!!!$$!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)
#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!"8l0!s]2F()nA?+s.^-'FkEQ!s&Gu!##A7!s]2E'cS8>
+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8
&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/
!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!"K#2!s]2E'cS8>+s.[:%Km(A
!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O
)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!!**&&HrIN'cePL/M/Cq)\WYc"Te`#!##A7":#>I
(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#Cs,
!sJu@'cePL/M/Cq)\WYc!X/W+q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@
!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#CKt!X&`=$kX<t,:+W[
*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j
,UtAt.3]]E%0m%<!Vl^.!<NB/$kX<t,:+W[*#9(m"p=r,!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/
!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6
!Vl^!!<N?.$P3a_)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq
)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'EJ7;#7D(Y)^$=K*uYh'#mCD3!<Drr'*/.:#7D%W
)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7
!s]2F()nA?+s.^;%LE:@!<Mur#6=l.#7D%W)[dc4+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<
!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:
%LE:@!<N0"qu@B2!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y
)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#C^%!sJu@'cePL/I=!X+r_1)#6b/0q#D'/
!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3
!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0quH]r'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O
)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s$NU;3#7M1]
*[;sW+pT)'&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/
!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<N#s'EA.8!s]2F()nA?+s.^;%LE:@
!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T
((^fW"9AQ!!"Ar1!s]2F()nA?+s.^;"V(hB!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j
,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!!!$4
!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6
!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#Cp+!WrZ8%i$$++sJ*H'FkEO"Tnc+q#D'/!sJu@'cePL/M/Cq
)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk
+<i!O)&*Pe"Tnc+q#CHs!sK5B%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7
!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^-!<WK3%M^!0.P35$+r_1)#6b,0
!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:
%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl]u!<NB/$k<jd*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm
+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;
#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu
!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^"!<N?.$P4'^)^$=K*uYh'
#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ
,pF<E&./UE!<Mur'`e@<#7D(Y)^$=K*uYh'#mCD3!<<,s!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=
#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu
!!iT,!s]2E'cS8&+sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0
$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&H$!;um2!<WK3%M^!0
.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:
#7D%W)^$=K*uPb&#mCD3!Vl^&!<WK3%M^!0.P34X.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-
q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E
%0m%<!W)j3!!!$$":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk
+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!"8l0":#>I(`jnJ,pF<5((^fW"9AQ!!##A7
!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0
q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?+s.^;%LE:@!<N-!r;[K3!WrZ8%i$$++sJ*H
'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm
+<i!O)AEYf"Tnc+q#Ca&!WrZ8%i$$++sI:7)&*Pe"Tnc+q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#!##A7
":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+
qZ%?2!!*0*#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I
'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur$ipG6#n@[j,UtAt.3\s8'+G0M!Wi)s'*/.;#7M1]
*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8
"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf"Tnc+
q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s%KQV6#7M1]*[;sW+rh@0
":>>9!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL
/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur!<E66!s]2F()nA?+s.^;%LE:@!<Mur'*/.:
#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!
!"]/4!s]2F()nA?+s.^;%LE:?!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E
%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!!<6'!s]>E%i$$+
+sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW+rh@0$3gV6!Vl^/!<N?.
$P4'm+<i!O)AEYf"Tnc+q#D$.!WrZ8%i$$++sJ*H'FkEQ!s&B&q#D'/!sJu@'cePL/M/Cq)\WYc"Te`#
!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^/!<N?.$P*sk+<i!O)&*Pe
"Tnc+q#CR!!sJu@'b)0/.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!##A7!s]2F()nA?
+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^0!<WK3%M^!0.P35$+r_1)#6b/0!;Z[/!<NB/
$kX<t,:+W[*#9(m"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&Gu!##A7!s]2E'cS8>+s.[:%LE:@!<Mur
'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^#!<NB/$kX<t$R6rD+rh@0$3gV6!Vl^/!<N?.$P4'm+<i!O)AEYf
"Tnc+q#D'/!WrZ8%i$$++sJ*H'FkEQ!s&Gu!##A8"UPYR*@**d/L_k_'+G0M!Wi)s'*/.;#7M1]*[;sW
+rh@0$3gV6!WE)s!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vl^/!<WK3
%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!!!rZ-!s]2F()nA?#pLH0'FkEQ!s&Gu
!##A7!s]2E'cS8>+s.[:%LE:@!<Mur'*/1=#n@[j,UtAt.3]]E%0m%<!Vl^/!<NB/$kX<t,:+W[*#9(m
"p=r-q#D'/!WrZ8&/H3-+sJ*I'FkEQ!s&H#!<)s3!<N?.$P*sk+<i!O)&*Pe"Tnc+q#D'/!sJu@'cePL
/M/Cq)\WYc"Te`#!##A7":#>I(`jnJ,pF<E&./UE!<Mur'*/.:#7D(Y)^$=K*uYh'#mCD3!Vl^'!<N?.
$P*sk+<i!O#8n3c#mCD3!Vl^/!<WK3%M^!0.P35$+r_1)#6b/0q#D'/!X&`:&JuQ6,pa`T((^fW"9AQ!
!##A7!s]2F()nA?+s.^;%LE:@!<Mur'*/.:#7D%W)^$=K*uPb&#mCD3!Vud1!!*0*#n@[j,UtAt.3]]E
%0m%<!Vl^/!<NB/$kX<t+seNZ*#9(m"p=r-q#D'/!WrZ8&/H3,+X%pG'FkEQ!s&Gu!##A7!s]2E'cS5<
+W_L8%LE:@!<Mur%06P7#n@[j,Uk8q.3]]7'+G0M!Wi)s'*/.;#7M.[*?ldU+rh@/$3gV6!Vl^/!<N?.
$P*sj+!DdL)&*Pe"Tnc+q#D'/!WrZ8%i$!)+X%mE'+G6O!s&Gu!##A8"UPYQ*$Zm`/1D_\&e,'L!Wi)s
!!*]6":#;G(*"MC,9\!@%giLD!<Mur'*/.:"ptkT)BU(E*Z,P##mCD3!Vl^/!<N?-$4dgg*ZuRH(_[>b
"Tnc+q#D'/!sJr?'H85F.Olhh)%m>_"Te`#!"T)3":#8F()n>>+s.[:%LN:A!s&Gu!##A7!sT&A'Gqf3
*ul(0%1*1?!<Mur'*/.:"pkbQ(`XS<*#B4s#mCD3!Vl^/!<WK2%20X&-7LAj*uGRu"p=u.q#D'/!WrW6
%MTd$+!2L?'+G6O!s&Gu!!30&!tYVB%2'Hq*#ok4&I\pK!s&Gu!##A7!sJu?&f2H+*#]P($j["=!<Mur
'*/1<#7M1]+!W*Z,97R3$O-_8!Vl^/!<E9,#n7L_)B9_8((^l["9SZ*q#D!-!<WK2$kO*i)B'G,%grUF
"9/Dt!##A6!sJr<&/5ou)&Eqs$O6e:!<Mur'*/.;#7D%X)^$=K+;tq($3^P6!Vl^/!<E6)#7D(V()Rl(
&e56R"9JT)q#D'/!<NB/$4[[_()@Sq%1*4@!W`>t!!E<'!X&`<$4[X^'bqDo%1*4@!W`>t!##A7!sJu@
',MT.*?,b+%1!+>!<Mur#6=i,"9o/A&H3=K&e>BV"Tnf,!Vl^/!<E6("UGMH&J>]f%LWLF!s/K(q#CX#
!<N?,#R_.A&I8pW$O6h;!W`>t!!`N+!sJo;%hnpY#Sn$_$3gV8!<Mrq&HMn7":#8B%M''Z$OI"?!W`>r
!"f54!sAf7$OmRU$jm7D"9JT)pAbBu!<WH/#n-_A#7LqF"U"l-!VZQt!<NB-#Rh(N&J>]f%LWLF!s/Mt
!!WH)!X&Z3#lP)4#R:J7rW2`n"p"`+!sJl6r<WQ2"p>&-!VZQu!<E6("U551#m1D:"9\W(pAbd+!<WK0
#RUtL%1ERL"U"l-!WE)q!<*!$!WrQ0r<EK0"9S]+!VQNm!=])4"9eu7#6k>7!s/K(p&P'm%0?V7"U52:
"pG,3!W`>q!"]/3!WrQ/#7(VB#R1G8!s/Mr!<*!$!WrQ.rWE9)!Wr?%o`4sl!WiH+rWN6'rrW0#o`4sl
!WiH+rWN6'rrW0#o`,*q!<N?+qum6,!s8T*!V?Bj!W)rs!Vufm!;urq!rW/k!;urq!rW/k!<3*"!rE'"
!r`5k!;6H_!;Z`p!Up*_!Up*f!W<*!!U]sa!UKg_!V?Bf!;Z`_!;Z_u!.k48!.k3&!3ZBQ~>

%%EndBinary
grestore
np
360.62 363.442 mo
360.62 404.141 li
.750271 .679713 .654902 .901945 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 360.62 363.442 ]ct
@
grestore newpath
441.491 408.764 mo
432.982 408.764 li
432.982 360.982 li
441.491 360.982 li
441.491 408.764 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[9.16363 0 0 48.4364 432.655 157.909 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 28 
/H 148 
/M[28 0 0 -148 0 148 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 28 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcN(VrW23_rW2Kgq#LBpkQ(S_lN$Y[mf<(_mf<(_mf<(_n,W@errW*!nGrIfrrW*!nGrIfrrW*!
o)SdjrrN*#rr`9&rW2Tjr;d-)!s8Z/!s/Q'!V?Bj!<<3!"9/H%!V?Bj!<<3!"9/H%!V?Bk!=Jr2"9\l3
"9S`-!<MfmrW*<-"9\l4"pG,3!r`5n!<*!#!s8])"Tef/!r`5n!<*!#!s8])"Tef/!r`5n!"T)3!X&Z1
"pYA;"U"o/!<MlorW*B/"9o):#mgkB"U"o+!VZTn!=Ju4"U>8<#R:P;!s8H&pAk0n$NgM8#6tM?#6k>6
!r`5p!"f54!X&Z3#mq%J$4$h>!s/K(pAbd+!<NB.#RUtL%1ERK"U"l-!VZR+!<E6)"U>>A$k*LM#6b22
!<Mop"p"`+"9f#:r<if9#6b22!<Mop&HMq8"U>AD%M''[$jd+A!s&Gs!"f55"9o,>%M03a&.JsO"Tnc+
pAb<s!WrT2$jmFS&.f<[#mUV9!<Mop"p"c-"U>ADrXT5D$jd.B!s&Gs!"f56"U>AE&JPrp'+bTZ"p=u.
p](j+!<NB/$4[[`()@Sq%1*4ArW2fp&-2e5"9o/A&/,`l&e>BV"U"`)!!)iq&-2e5"9o/A&/,`l&e>?U
"U"`)q#D'/!WrT3%1s?n)]KV.%grUG!W`>t!##A6!sJr>&Jc6&)Aj/!$O6e9!<Mur'*/+9"U>GI'G_N&
((q)a#6Y)/!Vl^#!<E9+#7D%U$PjNp'bUr_#6Y)/!Vl^/!<NB.$4dji*ZuRG(_R;b"Tnc+q#D'/!<`T6
%MK^"*Zc7:&If!K!W`>t!##A6!sJu?&f)B))]0;$$jQn:!<Mur'*/+9"UPVM()\&1(_mPh#6Y)/!WE)s
!##A7"U>GJ(EObG,Tn'A%giIB!Wi)s'*/.;#7;"W)]p4H*Z5V##mCD3!Vl^/!<N?-#n@Uc*$-.?((gr\
"Tnc+q#D'/!WrW5%MKZu*Zc79&I\pK!s&Gu!!rZ."UGPN)'C4R#q.&?(D$rY"9JW"!##A7":#;G(*"JB
,9Ig<%giIB!<Mur'*/.;"ptkT)BL"D*#K:u#mCD3!Vl^/!<NB.$4dgg*ZuRF(D7/`"Tnc+q#D'/!sJr?
'H85E.Olbf(_R5]"9JW%!<)s3!<NB/$P=0r+s\EV*#/tk"p4l,q#D'/!X&`8&/?-++X%jD'+P<P!s&Gu
!##A7":#8E'cS2:+<;=5%1*1?!<Mur'*/1=#n@[i,Uk5o-Qs??$jQn:!Vl^'!<NB/$ka?t+seNY#94Kj
$3gS5!Vl^/!<NB/$P4$l+!DdK)&*Pe"Tnc+q#D'/!X&`9&/?-++X%mE'+P<P!s&Gu!##A8"UPYS*$csa
/1;Y['+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vud1!!*-(#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/
$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur
%06M5#7D(Y*$?FL*uYgs%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(
#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur!!*]6":#;G'cS8>
+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9
&/H6.+sJ*I'FkEQ!s&Gu!"T)3":#;G'cS8>+s%U8%LE4@!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s
'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P
!s&Gu!!30'"V:tM(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL
*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D!-!sJu@(*+\N/M/Cq)A<Pb"9AQ)q#D'/!X&`:
&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/
!<WK3%Mg'2.P35$+rV+(#6Y)/q#CNu!X&`:%MBU#,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ
!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[
*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k
,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#CU"!X&`9&/GZo+<i!O)AEYf"Tnc+q#D'/
!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5
!Vl^1!<NB/$P4'n+<i!O)AEYf"Tnc+!!)lr'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$
+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur#QXu0#7D(X
)^#J3+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/
!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<N-!r;[K3!sJu@(*+\N/M/Cq)A<Pb
"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N
)&!Jd"Tnc+q#Ca&!sJu@(*+\N/M.5W+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G
(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/qZ%?2
!!*-(#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P
!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s$ipD4#7M4^+!W'X+rge&&./UD!<Mur'*/.;#7D(Y*$?FL
*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J
(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!W<#s!##A7":#;G'cS8>+s%U8%LE:@!<Mur
'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ
!s&Gu!"&`.":#;G'cS8>+p]5-'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X
+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&H"!#5J6!<WK3
%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur
'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^(!<WK3%Mg'2.P35$+pJr!%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m
"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju
.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G
'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^*!<NB/$kaC!,:+W[*#9(g$3gS5!Vl^/
!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L
!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl]r!<Ni9#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N
)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur&-2h8#7D(Y
*$?FL*uYh'#mCA4!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/
!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur!s&H+#7h1R'cS8>+s%U8%LE:@
!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I
'FkEQ!s&Gu!"o;6":#;G'cS8>+s%U8%LE:@!<</r!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^
+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!!NB*
"UPYS%36`E/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3
!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D*0!sJu@(*+\N/M/Cq)A<Pb"9JT(q>_00!X&`:&f;]8,pa`T
((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2
.P35$+rV+(#6Y)/q#CX#!X&`:&f;\u,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7
":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,
rW)ir'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq
)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur#lt)1#7D(Y*$?F3+s.^;%LE:@!<Mur'*/.;#7D(X
)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7
":#;G(*"G@+s.^;%LE:@!<N)urW!T4!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L
!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#Cd'!X&`9&/?-,+sJ'5
)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y
*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q>_30!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/
!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3
!Vl^)!<WK3%Mg'2.P35$+rUUu%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I
'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl]q!>5G:#7M4^
+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8
"UPYS*@30e/L_k^'+G0L!Wi)s%fl_7#7M4^+!W'X+rh@0$3LJ7!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3
!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E
&./UD!<Mur!W`?*&-iRS(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2
.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!"f55":#;G(*"G@+s.^;%LE:@rrMoq'*/.;
#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu
!##A7":#;G(*"G@+s.^;%LE:@!<Mur"9AQ,#7D"Q'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD
%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>
+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9
&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur"p"f0#n@^k$mdAT/L_k^'+G0L!Wi)s
'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P
!s&Gu!#5M:"UPYS*@30e/L_k^'+G0L!W`9$qZ%91!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@
+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#C[$!X&`:
&f;]8$7-uB*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur
'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,r;ccr'*/.;#7D(Y*$?FL*uYh'
#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK
,pF<E&./UD!<Mur$3:22#7D(Y*$?FL#Tjs!%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3
%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<N&t
'`\47!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0
$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#Cg(!X&`9&/?-,+sJ'G"qqIQ"Tnc+q#D'/!sJu@(*+\N
/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/
$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW&!;um2!<NB/$kaC!,:+W[*#9(m"p4l,
q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD
%0m";!Vl^&!<NB/$kaC!,:+WA+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,
+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!W)j3!!!$$
":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/
q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!"8l0":#;G(*"G@+s.^-'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8
%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.
+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/
$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!"K#2":#;G'cS8>+s%U8%Km(A!s&Gu
!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf
"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!!**&&HrIN(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK
,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#Cs,!sJu@
(*+\N/M/Cq)A<Pb!X&Q*q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur
'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#CKt!X&`=$kaC!,:+W[*#9(m
"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju
.3]ZD%0m";!Vl^.!<NB/$kaC!,:+W[*#9(m"p4l+!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9
&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^!
!<NB/$P3a_*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb
"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'EJ7<#7D(Y*$?FL*uYh'#mCD3!<Drr'*/.;#7D(X)^$=K
*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G
(*"G@+s.^;%LE:@!<Mur#6=l/#7D(X)[dc4+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/
!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@
!<N0"qu@B2!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL
*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#C^%!sJu@(*+\N/I=!X+rV+(#6Y)/q#D'/!X&`:
&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/
!<WK3%Mg'2.P35$+rV+(#6Y)/quH]r'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf
"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s$NU;3#7M4^+!W'X
+pT)'&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@
(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<N#s'EA.8":#;G(*"G@+s.^;%LE:@!<Mur
'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW
!s&Gu!"Ar1":#;G(*"G@+s.^;"V(hB!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju
.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!!!$4!X&`9
&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/
!<NB/$P4'n+<i!O)AEYf"Tnc+q#Cp+!X&`9&/?-,+sJ'G'+P<N"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb
"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N
)&!Jd"Tnc+q#CHs!sK5B%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G
(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^-!<WK3%Mg'2.P35$+rV+(#6Y&/!Vl^/
!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@
!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl]u!<NB/$k<me+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O
)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^
+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8
"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^"!<NB/$P4'^*$?FL*uYh'#mCD3
!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J(`stK,pF<E
&./UD!<Mur'`e@=#7D(Y*$?FL*uYh'#mCD3!<<,s!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k
,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!!iT,
":#;G'cS8&+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5
!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&H$!;um2!<WK3%Mg'2.P35$
+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X
)^$=K*Z5V$#mCD3!Vl^&!<WK3%Mg'2.P34X.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/
!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";
!W)j3!!!$$":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N
)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!"8l0":#>J(`stK,pF<5((^fW!s&Gu!##A7":#;G
(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/
!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;%LE:@!<N-!r;[K3!X&`9&/?-,+sJ'G'+P<P
!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O
)AEYf"Tnc+q#Ca&!X&`9&/?-,+sI:6)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7":#>J
(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+qZ%?2
!!*0*#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ
!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur$ipG6#n@^k,q:Ju.3\s7'+G0L!Wi)s'*/.;#7M4^+!W'X
+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS
*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+q#D'/
!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s%KQV6#7M4^+!W'X+rh@0":>>8
!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq
)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur!<E66":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X
)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!"]/4
":#;G(*"G@+s.^;%LE:?!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";
!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!!<6'":#GF&/?-,+sJ'G
'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0$3gS5!Vl^/!<NB/$P4'n
+<i!O)AEYf"Tnc+q#D$.!X&`9&/?-,+sJ'G'+P<P!s&B&q#D'/!sJu@(*+\N/M/Cq)A<Pb"9JW"!##A7
":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^/!<NB/$P4$l+<i!N)&!Jd"Tnc+
q#CR!!sJu@((D91.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7":#;G(*"G@+s.^;
%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^0!<WK3%Mg'2.P35$+rV+(#6Y)/!;Z[/!<NB/$kaC!
,:+W[*#9(m"p4l,q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&Gu!##A7":#;G'cS8>+s%U8%LE:@!<Mur'*/1=
#n@^k,q:Ju.3]ZD%0m";!Vl^#!<NB/$kaC!$R6rD+rh@0$3gS5!Vl^/!<NB/$P4'n+<i!O)AEYf"Tnc+
q#D'/!X&`9&/?-,+sJ'G'+P<P!s&Gu!##A8"UPYS*@30e/L_k^'+G0L!Wi)s'*/.;#7M4^+!W'X+rh@0
$3gS5!WE)s!##A7":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vl^/!<WK3%Mg'2
.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!!rZ-":#;G(*"G@#pLH0'FkEQ!s&Gu!##A7
":#;G'cS8>+s%U8%LE:@!<Mur'*/1=#n@^k,q:Ju.3]ZD%0m";!Vl^/!<NB/$kaC!,:+W[*#9(m"p4l,
q#D'/!X&`9&/H6.+sJ*I'FkEQ!s&H#!<)s3!<NB/$P4$l+<i!N)&!Jd"Tnc+q#D'/!sJu@(*+\N/M/Cq
)A<Pb"9JW"!##A7":#>J(`stK,pF<E&./UD!<Mur'*/.;#7D(Y*$?FL*uYh'#mCD3!Vl^'!<NB/$P4$l
+<i!N#8n0b#mCD3!Vl^/!<WK3%Mg'2.P35$+rV+(#6Y)/q#D'/!X&`:&f;]8,pa`T((^fW!s&Gu!##A7
":#;G(*"G@+s.^;%LE:@!<Mur'*/.;#7D(X)^$=K*Z5V$#mCD3!Vud1!!*0*#n@^k,q:Ju.3]ZD%0m";
!Vl^/!<NB/$ka?t+seNY*#0"l"p4l,q#D'/!X&`9&/?-++X%mE'+P<P!s&Gu!##A7":#;G'cS5<+W_L7
%LE:@!<Mur%06P7#n@^j,Uk8q-m9H3'+G0L!Wi)s'*/.;#7D+[*?laS+<2+,$3gS5!Vl^/!<NB/$4mpj
+!DdJ)&!Jd"Tnc+q#D'/!X&`8%i$!(+<V[B'+G6O!s&Gu!##A8"UPYR*$Zm_.jlJX&e#!J!Wi)s!!*]6
":#;G(*"G@+s.^;%LN@A!<Mur'*/.;"ptkT)BBnA*#K:t#mCD3!Vl^/!<NB.$4dgg*?Q@C(D7/`"Tnc+
q#D'/!sJr?'H85D.4HSd(_I/\"9JW"!"T)3":#8F'cS5<+WVF6%1*+?!W`>t!##A7!sT&A',V]1*Z>e+
$j["<!<Mur'*/.:"pkbQ(`OM;)AWnn#R(81!Vl^/!<WK2%20U%,q(/d*Z#@q"p4o-q#D'/!<`T6%MK[!
*Zc79&If!K!W`>t!!30%!tYVB%1s?n)]KV.&.AdH!W`>t!##A6!sJu?&JZ0&)]08"$O6e9!<Mur'*/.<
#7M1\*?c[R+<)%+$3^M5!Vl^/!<E9+#Rq=[(`F;/'+YHU"9JT)q#D!-!<WK1$kF!e(`3u#%LNFD!ri;s
!##A6!sJo;%hfZo(DRMk$3p\8!<Mur'*/.;"ptkT)''hB*#B4t#mCD3!Vl^,!<E6)#7:nQ'G_Gt&.JpM
"TAGt!"]/3!X&]6$kO$c'G:ob#R(>0!Vl]u!<E6)"q(_G&/#Wi&J#6T"U"`)q#D'/!WrT3%1j9l)B'D+
%grUG!W`>s!"f55"9f&<%1j*`%h/jN"9SZ*pAbd+!WrT2#n.:T&.T*T"p>#/!VZR,!<N?,#71eK%hB*W
#mLM7!<E2q!"f56"U5;C&/,cn&e>BV"U"l-pAbd+!<NB.#RUqK%1<LJ"U"l-!VZR+!<E6("U>>@$k*IL
#6b22!<Mop&HMn6!sJo9$4@4K#mUV9!W`>r!!NB)!sJo:$OmRV%h9!S"pG)0!VZTn!<WE,"UG#4"pYA:
"9JT)p&P'm!s8W/#5nc1"pG)1!<MlorW**'!sJo-#6b;8!s/K(p&G9t!<NB-"pk28"pkP>"Tnf,r;cWn
rW*'%"9e]-!sA`/!r`5n!<*!#!WrT)"Tnl0!s8H&o`4sl!WiH,rWNB,!s8W(!VHEr!<E6("U4l0"pG/5
!s/K(o`4pk!WiE*rW<-%r;lNjr;lp"r<!$$r;lNjr;lp"r<!$$r;lNjrW*'%!sAK)"9S],!<M`ko`=jg
q#L'gnGr4_nGrOhqZ?`tn,W4amK!+brW2Eep]9d_p]8&.JcLB&kl?;8TE'K~>

%%EndBinary
grestore
np
437.187 362.925 mo
437.187 403.624 li
.750271 .679713 .654902 .901945 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 437.187 362.925 ]ct
@
grestore newpath
286.022 383.964 mo
357.993 384.438 li
25400 lw
gsave
[7.87043e-05 0 0 7.86947e-05 284.039 383.951 ]ct
@
grestore newpath
284.039 383.951 mo
291.545 379.639 li
292.023 379.364 292.634 379.529 292.909 380.008 cv
293.184 380.486 293.019 381.097 292.541 381.372 cv
288.006 383.977 li
292.506 386.642 li
292.981 386.923 293.138 387.536 292.857 388.011 cv
292.575 388.486 291.962 388.643 291.487 388.362 cv
cp
ef
359.976 384.451 mo
352.47 388.763 li
351.992 389.038 351.381 388.873 351.106 388.394 cv
350.831 387.916 350.996 387.305 351.474 387.03 cv
356.009 384.425 li
351.509 381.76 li
351.034 381.479 350.877 380.866 351.158 380.391 cv
351.44 379.916 352.053 379.759 352.528 380.041 cv
cp
ef
363.099 383.951 mo
434.819 383.951 li
gsave
[7.87043e-05 0 0 7.86947e-05 361.115 383.951 ]ct
@
grestore newpath
361.115 383.951 mo
368.593 379.59 li
369.069 379.312 369.682 379.473 369.96 379.949 cv
370.238 380.426 370.077 381.038 369.6 381.316 cv
365.083 383.951 li
369.6 386.586 li
370.077 386.864 370.238 387.476 369.96 387.953 cv
369.681 388.429 369.069 388.59 368.593 388.312 cv
cp
ef
436.803 383.951 mo
429.326 388.312 li
428.849 388.59 428.237 388.429 427.958 387.953 cv
427.68 387.476 427.841 386.864 428.318 386.586 cv
432.835 383.951 li
428.318 381.316 li
427.841 381.038 427.68 380.426 427.958 379.949 cv
428.237 379.473 428.849 379.312 429.326 379.59 cv
cp
ef
.750271 .679713 .654902 .901945 cmyk
ZHYQFL+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf379.426 410.765 mo(!)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf390.996 410.765 mo(x)sh398.982 410.765 mo( )shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf403.48 410.765 mo(/ 2)[4.99814 4.49796 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf421.973 410.765 mo(\000\001)sh119.455 144.982 mo
81.8181 144.982 li
81.8181 136.145 li
119.455 136.145 li
119.455 144.982 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[38.2909 0 0 9.49091 81.4909 421.691 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 117 
/H 29 
/M[117 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Q2p:Q\cLsoirR(!k5a09c2m).cN2Z!l2\[%hZ<*E\,kgp
m/X9io)\4YquNf!!!3$!mf<7drW9/'rW;uur;cKjquQcuX98G'quQBhrrDrtrW9/'rW;uunGrOhrrW0%
X9AM)rrW0#nc8Xi!WiH+rWMs![KZX5!<WE%!V6<j!<<3#"9/Mk"i(9E"9\f/!rW/k!<*!!!r`<%"QK[.
"U"r2!s8W'!V69p!<E6("9e]-f`oq1rWNH.!s/N)!V?Bk!<rT-"9f#8#gWh7#mU_A#6k>7!s8H&o`4sl
"p+l0"U52:`<b]6rW`Q0"Tni.rW2ZlrW*3)!sAc3#7%jHo*G=#"9er2!s8H&qZ-Kn#lt&.!sAc3#RLj?
$OR4J#mUY<"9S]+!VQNm!<E6)"pG5<$4I@QXptdJ%1<LK"p>#0!<MlorW*9+!sJl7#n%.MrXH+A$4I=M
#mUV:!s/K(p&P'm#Qb)3"pbMC$OlY:]+#)U$OR1F"U"o/!<Mlo$NU80!sJl7$OmRV&F'kH&IK'[%L`[L
"U"o.!VQL&!<E6)"U>AD%hTHg'GTOAd1m!&'GD)j%LWRJ"9\W(pAbO$!<N?,#71eK&/"mSfG!!Q$5*s`
&.]3W#R1D6rW2`n%06J2!sJo9$OmUY&J>`%'BKl7&eYcf%h/jO"p>&-!VZR'!<E9+"pk\K&eu3!(`:1/
mhlQO(`*r%&Io0S"U"l-!VZR(!<E6)#7:nO',DE&)B0X-*;UWb)]K\5(DRSo$j[%?!W`>r!"/f.!X&]6
$kEsb()QreZl/i[$PsNk&Io0R"Tnf,!VZR(!<E6)"pk\K&JPrr(Dn!r)%7?!(Ddf"&If*Q"Tni+!VZR%
!<N?,#Rh7Y(E4A:rZJQkrZDRj*#TP*%LNFE!s/N!!"Ju/!<E9+#Rh7Y(`OJ;+L*(!+<M[F)&<kq$3p\8
!<Mop#6=i-"U>DF&d/se)B9d&*Xs,0*#]V-&If$N"9JT)pAbU&!<WK1$P!da(`FA7r#W9f%36E-)&Eu!
%1*4A!W`>r!"8l0"9o2C',V`4,:4f/.)75?-RL,`*uc".%1!+>!Wi&r%06J2"9o/A&f)B,+X/2q--@MC
,U4KT*#TG%$O6h;!<Mrq$ipA1!sJr=&/5s#*Zs2]dif,B*ul17&e56R"Tnc+p](a(!<N?,#Rh7Y(E4D;
+OhRk+UoP:*ZQ%5&e56R"Tnc+p](a(!WrT2$P4'm+=&?a/'9F,/.F*Z.4-5[(_[Ac"p=u.p](^'!<NB.
$4RXa)]p7Lr[#E.o-XG_$R6f8)&3\k#R(;2!VcX*!<E6("UPSL'Gqf3+X&$R\0Lqs%O*)?+<DF;'+YHU
"Tnc+p](a(!<N?,#n.C[(`OM=+g<-m+WqgE#T"-b$O6h;!<Mrq%fl_6"U>GI(E4JC.4Zr$/[R,@/M/M'
-mKfO'FkHS"9JT(q#LBp$NpY?%1s?n*?ZON,I/R(,9e9Q*#KA$$O6e:!<MrqrrEN/!sJr=&/5p!*?QCH
Z69Z"+!)C>((q)a#6Y,0!VcZo!=/c2#R_.V(E+:o*j6[p+!)@='bUu`#6Y,0!VcX)!<N<+#7D%W)BU1O
.4QhD/%I/>.Ocbl+WVC5%LE:A!Wi#q$NU81"U>DG',DH**UY#d*t022)]9A&%13=C!W`>r!"/f.!sJo:
%M9Bk)&hQUbT%$1)Aj5'&.AjL"9JT)pAbX'!<WK1$4RR](E",1)r)Fb*"<i+)Aj5'%h&aK"9JT)pAbX'
!X&]6%MBQs+!DjT-.4.!-4M7H,9S$F'bCcZ"Tnf,pAbR%!<NB.#n.=W'c%Y+)<r(J(`*r$&Io-R"U"l-
!VZR$!<E6)"UGJG&/,cW(;:UX(C_,q'bh8l%1*7C!s/K(quHWp%06J2"9f&=%1j0e'c%Rj(C_,p'b_/i
%1*7C!s/K(pAb<s!WrT2#R_+T()\&3*ZhU/%3?N0)Aa,#%13:C!s&Gs!<*!,!sAi8$OmUX&eYikZ4dTY
&J,H^$4$h=!W`>q!<*!*!sAf6$4ICT&.nLH]FbM_&.T0Y#mUV9!W`>q!<*!*!sAf6$4I@S&.n.>`XrRi
%h9$V#mUV9!W`>q!"8l/!X&Z4$P!^\'G_JC(XNs+()7Jq%h/jN"Tnf,p&P'm#Qb)2"pYGA$OkSqg'n;r
$k!CJ#6b54rW2]mrW*9+!sAc4#RLhGbREP@#R_"I#mU\=!sAN'p&P'm#6Fu1"U>;>$Gd,:$O-qE#6tD7
"9&>p!"/f.!WrQ/#71bI%M#uZp^d?6#Rh%H"pG,2!<MinrW*-'!sA`2r<KP4!!`]5#6k>7"9SQ'oDnjk
"Tec."9f"1#6b;8"U"o/rW2WkrW*0(!s8Z0#-.t4"pG/5!s8H&pAk0m#QXr-!sAc2#71;8YR1^D#m^b?
"U+u0!<Mclr;cp#!rrG%"9JZ,!r`5k!;uou!rW5t"LA71"9/H%!V-6h!<<3""7QH,"TAN'!r`5k!!WH)
!WiH,"QTa*"U,#2!s/K(nGrFeg&fV&qZ60dqZ5%Fg&h-Pn,W=d`WG3&qZ60drW3!"]E@R(rW<'"mJsBj
oE":YU]LGqli<^[q>g*eT`OW_p].>qiW&rZX9%;\p&VT&iW/<G^]D=QJcLB&JcLB&iW+Q1JcLB&JcLB&
JcLB&JcLB&JcP9?J,~>

%%EndBinary
grestore
np
85.3044 138.934 mo
115.83 138.934 li
.750271 .679713 .654902 .901945 cmyk
19050 lw
gsave
[0 -7.86947e-05 7.87043e-05 0 85.3045 138.934 ]ct
@
grestore newpath
119.455 213.709 mo
81.8181 213.709 li
81.8181 205.2 li
119.455 205.2 li
119.455 213.709 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[38.2909 0 0 9.16363 81.4909 352.964 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 117 
/H 28 
/M[117 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&QN6@Q\H1ppiW6ptklB?:blR&/c2lMtli=j&hZ<-F[fP^o
mJs?io)\7Zr;ietr;l?er;lp"W<</%quQ`ro`4pkrrT/%rrW*!o)Sdjr;lp"W<</%quQ<frrN-$rr`9(
Ws&G)rrW0#nc8Xi"Tec/"9eu'#.Fg:"o\W*!s8H&o)Saj!s/Q,"R?6+"TS])!rrE%!V6<j!<WB*!sIQd
aTVYIrW<-%rW2Tj#QXr-!sAc2"pW`ceHc*YrWNE-!s/K(oDnjk"p+o2"pYD?cO/P:#71\A#6k;5!r`5n
!<*!'!WrT0#6tOR$0_a$#RCY>"U"o/rW2ZlrW*3)!sJi5#7.pJo*GX-#R:P;"9S`)!W)lo!!rZ,!WrT1
#71_Fr=$%BrX9,A$OI(D"U"o/!<MlorW*$$":,/9#n%1O%M')U&.B'[%LigR#mUS8!W`>q!<*!)!WrT2
#RUtK%K6jB%LNXR$OI(C"9S]+!VQNm!=&Z."U>;?$Om"Dp("bGrXB/B$OI(C"9S]+!VQL&!<E6("U58@
%M'*_&eaOE`tJjo&ePZb%1<FF"9S]+p&GL%!<NB-#RV"P&ebroi>0cU#o+-f&J#9W#6Y/.!VZR&!<E6(
"U>>B%M06c'A!rP'F>Ec&J,E[#mLM7rW2`n$NU80!sJo9$P!^['$M$L'*o3_%h/mQ"p>&-!VZR&!<N?,
"pteM',DB$)8dB\)@RK#(DRPm$j[">!W`>r!"/f.!sAi9%1s9j)&p(*p`'\])Aj5'&.AjL"9JT)pAbX'
!<WH/#n.@X'c.]))6t.])&N_u().>j$O?n<!W`>r!"/f.!sAf7$kEsc(Ds=n$5aQo'+k]^#R(;3rrMio
%06M5"UGPK'c7o4+<_o6+q5\<+<;@:'+PBT"Tnf,q#Cp*!!**&"UGMJ'Gqf2+!Df5+q5\<*uu78'+YET
"9JT)pAbF!!<WK1$P*jR()\&2*ZhU/%3?N0)Aj/#%LE=B!W`>r!"/f.!sJo;%h]Tp)]\_r[2o_s*#]V-
&If$N"9JT)pAbX'!X&]7%MTa#+XAB_..\n'.1I[Q-6jWP(D7/_"Tnf,p](a(!<NB.#n7L_)]p4J,j6Pr
,n)%C+<276&.8^H!s&Gt!"8l/!WrT3$kO*i*$-7%+lFQp,5r_n*uu78'+YET"Tnc+p](g*!<N?,#Rh7Y
(`OM=+<_oZ,2XRS+X%sM*>oV+%giOF!s&Gt!"T)2!sJo;&/H3-,q(5n/1f!skq*Ar/1W.s+s%U9%LE=B
!Wi&r$ipA1"9o2B',DN/+s[(5_C"k$%OEDH+s7mD'bCcY"Tnc+p](g*!<N?,#n.C[(`XV?+X&&>,Q/hs
+sA*O*?#_-%grUG!s&Gt!"K#1!WrT4$kX0j)]g+F+gN9p+WqjI)@.,m%grUG!s&Gt!"T)2!sJo<&/Q9.
,q1;p/1n4]%kT=_.46>^)&*Pe"p=u.!;QWo!=Ju6#n7I])&s_A+sO<;%3cu=*ZGq0%grUF!W`>s!<3'.
!<WK2$kO'g)B9e?+0m!u+!2LB(`!_o$3p\8!<MrqrW*9,"UGJH',MN+!ZiF*Z60Su*ZZ1:'bLl^#6Y)/
!VcX)!<E6)#7D%W)':%L-n-VA._.#<.4HVi+<;72%LE:@!Wi#q%KQS4"U>DG&f)?(*$$(AnK5[k%NZZ3
*#]V-&If'O"9JT)pAb[(!<WK1$4[U]()Rr.)]Rr[c5[<5)]BS2'bV&d#mCD4!<Mop$ipA2"U>AD&/,fr
)&h6Kef,#9)&F##%h&aJ!s/K(pAb[(!X&]6%MBNq*ZuXO,UChbi[#'[,U4HT*#KD%$jQq<!Wi#q$ipA1
"9o/@%M9?i()P".l50gD()7Jo%13=D"9&>q!"8l/!WrT3$OmX['GM:q(A&@K'bh;n%h&aL"U"`)quHWp
$NU80!sJr<%1a$a'Wr/V'GD&h$jd.B"9&>q!!E<(!sJo7$P!a`(E+54YT4,l)]9G+&.JpM"9JT)pAk0n
#Qk26#RV"N&.ngQZkE?M$4m^W$jm4C"9JT)p&P'm#Qk25#71eJ%M/1C]+>;[%L`^O#6b22!<MlorW*6+
"9f#:$OmUE&+'qL&H*+G%1EUN#6b22!<Mlo$NU80"9f#;%1a$a'`Jj-(=Eut'abWf&.T*T"pG)1!VHF#
!<E6("9o):$47.Kf*p@A#R_"I#m^b>"9SQ'o`,@#!<N?+"U>8=#mq$a$fh[$$47(F#6k>6!r`5n!"/f.
!WrQ/#6tPA$4=ZYmL':-$4-tC"pG)1rW2Zl#lt&/"9f#:$4IBQ%e^A=%1<LK"pG)1!<MfmrW*-("9\l4
X9Sq7"pP56!s8H&o)Saj"p4r1"U,)7Y6Y(3rWN?*!s8H&o)Saj"p4r1"U,)7Y6Y(3rWN?*!s8H&pAk-l
#lt)/"9er5#7(U=#mpqD#6tG:"9S]+!V6<i!WN3$"/uD)!s8W'!V-6h!WN5u"8rA2"T&9$!rW/j!;uru
!rE)k"Mb0;!rrE$!V-6i!<WB*!sIZg`WZPL"9S],!<MZiqZ5FQd/s.Fmf<4cd/r&(q>p$bqZ4_=jT>8Z
mf<=frW9b8mfWLirW2BdY6"7rlN!a^rW2<bU&k)jnc5Bbn,S%?JcLB&JcLB&JcLB&JcOd1JcLB&JcLB&
JcLB&a8g_~>

%%EndBinary
grestore
np
85.3045 207.932 mo
115.83 207.931 li
.750271 .679713 .654902 .901945 cmyk
gsave
[0 -7.86947e-05 7.87043e-05 0 85.3045 207.931 ]ct
@
grestore newpath
119.455 283.091 mo
81.8181 283.091 li
81.8181 274.255 li
119.455 274.255 li
119.455 283.091 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 567 ]ct
[38.2909 0 0 9.49091 81.4909 283.582 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 117 
/H 29 
/M[117 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 117 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Q2p:Q])h$oirR+"joF'8cN3/.cN2]"klAR$hZ<*E\,kgp
m/X9io)\4YquNi"rrN'!mf<7dr;s,(r;uouquHBiquQ`tXonV(r;lHhrrDrtr;s,(r;uoun,WFgrrW0%
!!BA,r<*'$rrMWirW*'%!X&E)pBA#0r<*-'!rW/k!<*$!!riB&"RQB/"oe`)!rrE$!V6<j!WN6$"9/Ma
"j7)L"TAK'!rW/k!!NB(!WrN-rWUsZeHYsU!X&T,rW2WkrW*6*!sAc4#7(U^$/c*s#RCY?"pG,3!W`>o
!<*!%!WrQ/#6"kI#jM]p#6tG:"Tni.!<MfmrW*-'!sAc3rWg(AoEbF$#6k>8!s8T*!Vufn!"&`-!WrQ/
"pbMB$EjgE$47(F#6k>7!s/Mr!<*!"!X&W0#7(YEr=-%BrXB&?$OR+C"9\W(p&P'm"p+l1"pYGAr<rZ8
ZOQmB"q(bE#6b54rW2]mrW*6*!sJl6#mq(>%/(.D%1*FO$O[:J#6b54rW2]m$3://!sJl7$4ICTrXeE.
`t8^k&.]6\$jd.B"9JT)p&GL%!<N?,#7:kL&/#Wii=sZRrY#MK&.K!R"p>&-!VZR%!<E6("U>>A%1a!^
ee6XK#S@UX$jm7D"9\W(pAbU&!<N?,#71bI%hK<bbnB+NrXfAG%L`[M"U"r,!VZR&!<E9*"pk\J&JPus
(W.*Y)#b<Y'b_,g$O6h<!W`>r!"/f.!X&`8%1j0g(`E;k],USc%N66')&F##%grXH"9JT)pAbR%!<NB.
#n.=W'G_Lg(]Y?[()7Jo%LNFE!s/K(pAbO$!<NB.#n%7U',CH^Zl&cY#o46h&.JsO"Tni+!VZR%!<N?,
#Rh4X(E+;9Y945q*ZQ%5&e56Q"Tnc+q#Cs+!!**&"UGMJ',MT.+!2UJZloo%+<MXE)&<hp$3p\8!<Mop
#6=i-"U>DF&dB'f)B9_;*OHjt*??+=)&Etu%1*4A!W`>r!"K#1!sJo;%M9Em)B0Y:*W@+h*Y'22*#fb3
'+bTZ"p=u.!VZR(!<NB.$4[^c*$?IP-7:25.)@;A-RU5d+WhU<&If!L!s/Mu!"K#1!X&]6%2'Ep*ZuXP
,j?Vt,mttC+s.dB'G(WW"U"`)q#Cg(!<N?,#Rh7Y(`OJ;h'(5j$6UE1)AWqq$3p_:rW2fp%KQS3!sJr=
&/,j!*?QCHeKNcm$QpQ5*#TM)%LNFE"9&>s!"K#1!sJo;&/H0,,UY#k/'BL-/.O0[.4-5[(_[Ac"p=u.
!Vl^(!<E6)"pteQ()n>>,lT+,-M&S`,mbe=*>oS'$j["=rW2fp%fl\4!sJu>&JQ'%+!DdO,.Jlr,7Gb?
+WqdD(D@;e#6b5/!Vl^)!<E6("UPSL'Gqc1+<ds5"!Jd-)?puk%grUG"9&>s!"T)2!sJo<&/Q9.,q1>q
/M4=^%kT@a.OQG_)&*Pf"p=u.!Vl^)!<E6)"pk_N()e29+sX?<$R6i=*ul.4&.8^G"9&>s!<3'-!WrT3
$kO*i)BBnBYosJt+!)C?((q)a#6Y/.!Vl^'!<E6("UGJH',MQ-!$8<d$6L<.)&<hp$3p\9rW2fp%06J3
"U>DG'cJ2>-RgP@/%I/?.Ocbl+s%R7%LE:A!W`>s!"/f.!sJr<&/,ft*$5)$nK>amrZ;Lg)]9D(%13=C
!W`>r!"/f.!sJo:%MBHm)B8Yqk8hhgrYu:a(`!es$jd+@!W`>r!"K#1!sJo:%M9Bk)&jM7*8MXf*=a&/
)]BP/'+bQY"p=u.!VZR(!<NB.$4[^c)^$=M,pjtf-fQK`-71#`+<DF:&.AgJ!s/Mt!"/f.!X&`7%1j0f
(E!,haVsLarYZ(\().>j$O?n=!W`>r!"K#1!X&]5$k<j_'c%Q$(V^g\(_.>u()@Ss&.JsO"Tnf,!W2rq
!"8l/!X&]5$P!a^'bqLg(CV&o'G:oc$3p_:!W`>r!!E<(!sJr:$P*me)&sY<+!7j4%Ncc6*?,h1&Io-P
"Tnc+pAk0n#Qk27#n%1R&JG'VYnIHW&.]3W#R1D5!<MlorW*?."9o,=$k<g[&J=^L^(UDW$4m^X$jd.B
!s/K(p&P'm#Qk26#RUtM%hS"<`=WFg%h/mQ#6b22!<Mlo$NU80"9f&=%M09g(>p"T(CCol&e>EY#6b22
!VQNm!=&Z.":#2>$4PGofaS/p$OR1F"p>&-!VQNm!=&Z."9o);#n+obisZ/#$4-tC"Tnl+!VQNm!<rT-
"9o);$2k7M%.F]($O-qE#R:M8"9&>p!"&`-!WrQ/#RUtL%fR!M&Gct;%gidV%1<II"U"l-!VHHl!<`H+
"9f#/#He@3#6P/5"9SQ'oDnjk"Tec."U,+1#6Y57"9S`)!V?Bk!<iN,!sJi4WWrY2"U"o/rW2`nrW!9+
!<N?+"U52;#mmaA#mgnD#6b85!W`>n!;up!!X#>'!WrN+rW2Qir;cm"rWDs!Z3:./!!<-#nc8Uh!!<-%
mf^9+rW<-%rW2Qi"T\W*!WrSc"iUWK"9\f.!<M]jqZ5CPcN="Fn,W=dciVl%quQ9eqZ4\<ir],Zn,WFg
rW9_7m0!@irW2EeXo\.qli<g^rW2?cT`Ouio)SUfY6+P$n,W4`WWD,[!!0,$irJcR[/o:fliFj%_uPAh
JcLB&JcOd1JcLB&JcLB&JcLB&JcLB&JcLB&n,Rt~>

%%EndBinary
grestore
np
85.3046 277.072 mo
115.83 277.072 li
.750271 .679713 .654902 .901945 cmyk
gsave
[0 -7.86947e-05 7.87043e-05 0 85.3046 277.072 ]ct
@
grestore newpath
101.921 142.212 mo
101.921 207.362 li
25400 lw
gsave
[7.87043e-05 0 0 7.86947e-05 101.921 140.229 ]ct
@
grestore newpath
101.921 140.229 mo
106.282 147.706 li
106.561 148.182 106.399 148.794 105.923 149.072 cv
105.446 149.35 104.834 149.189 104.556 148.713 cv
101.921 144.196 li
99.2856 148.713 li
99.0075 149.189 98.3954 149.35 97.9186 149.072 cv
97.4418 148.794 97.2807 148.182 97.5589 147.706 cv
cp
ef
101.921 209.346 mo
97.5589 201.869 li
97.2807 201.392 97.4418 200.78 97.9186 200.502 cv
98.3954 200.224 99.0075 200.385 99.2856 200.862 cv
101.921 205.379 li
104.556 200.862 li
104.834 200.385 105.446 200.224 105.923 200.502 cv
106.399 200.78 106.561 201.392 106.282 201.869 cv
cp
ef
101.531 210.091 mo
101.531 275.241 li
gsave
[7.87043e-05 0 0 7.86947e-05 101.531 208.108 ]ct
@
grestore newpath
101.531 208.108 mo
105.893 215.584 li
106.171 216.061 106.01 216.673 105.533 216.951 cv
105.057 217.229 104.445 217.068 104.166 216.592 cv
101.531 212.075 li
98.8963 216.592 li
98.6182 217.068 98.0062 217.229 97.5293 216.951 cv
97.0525 216.673 96.8914 216.061 97.1696 215.584 cv
cp
ef
101.531 277.224 mo
97.1696 269.748 li
96.8914 269.271 97.0525 268.659 97.5293 268.381 cv
98.0062 268.103 98.6182 268.264 98.8963 268.741 cv
101.531 273.258 li
104.166 268.741 li
104.445 268.264 105.057 268.103 105.533 268.381 cv
106.01 268.659 106.171 269.271 105.893 269.748 cv
cp
ef
ZHYQFL+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf51.2055 176.246 mo(!)sh%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPS-ItalicMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZHYQFI+TimesNewRomanPS-ItalicMT gcheck setglobal} if
1 1046 4 <00010054ffe802630481001e0106b90005ffde40710f390f400f39a405ef
02fb0e03551b8a00f60103241d3a005b0e030f201d20027f20ef20021e00
0e0f0104050707001d1c1e1b011a1c1d1e18051904010800161a19190404
039300a0020106130b0007071f161914161619161f2819161002490f031f
0302ff0301036c2000af070f8a0eba010100070203400c121640363934c0
16d0160216b8013b400a1f091617161f0a774c182b2b103c2b2b10f65d2b
435c58400f164028143f16401c113f16401e123f2b2b2b5901fdf6ed10e4
10f45d71e42b103c2b10c0870e2e2b057d10c400183f3f3ce4fd3c103c10
3c011112173900111239113939870e7d10c4053c3c0110c910c93130015d
715d5d5d2b2b010333072303061514163332373637170607062322263534
3713233736363702144e9d119cac1c100b19291853215c5238392c3820a7
970a6e925a0481fef03ffdb25f1c111223146719863726372b366f024327
1e779300>ZHYQFI+TimesNewRomanPS-ItalicMT AddT42Char 
ZHYQFI+TimesNewRomanPS-ItalicMT /CharStrings get begin
/t 4 def
end
ZHYQFI+TimesNewRomanPS-ItalicMT /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZHYQFI+TimesNewRomanPS-ItalicMT*1 [32{/.notdef}rp /space 73{/.notdef}rp /j 3{/.notdef}rp /n 5{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]ZHYQFI+TimesNewRomanPS-ItalicMT nfZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf62.7755 176.246 mo(t)sh67.7742 176.246 mo( )shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf72.2721 176.246 mo(/ 2)[4.99812 4.49796 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf90.7647 176.246 mo(\000\001)shZHYQFL+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf50.8163 242.946 mo(!)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf62.3862 242.946 mo(t)sh67.3849 242.946 mo( )shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf71.8829 242.946 mo(/ 2)[4.99812 4.49796 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf90.3754 242.946 mo(\000\001)shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf106.984 41.9542 mo(j )[4.99812 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf116.481 41.9542 mo(- 3/2)[5.99114 4.49796 8.99591 4.99812 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf149.961 41.9542 mo(\000\001)sh310.869 453.249 mo
310.869 523.656 li
[76200 25400 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 310.869 453.249 ]ct
@
grestore newpath
235.721 458.853 mo
235.721 529.26 li
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 235.721 458.853 ]ct
@
grestore newpath
306.441 459.016 mo
236.026 459.016 li
gsave
[0 7.86947e-05 -7.87043e-05 0 306.441 459.016 ]ct
@
grestore newpath
311.145 526.099 mo
240.729 526.099 li
gsave
[0 7.86947e-05 -7.87043e-05 0 311.145 526.099 ]ct
@
grestore newpath
%ADOBeginSubsetFont: OAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZHYQFK+TimesNewRomanPSMT gcheck setglobal} if
1 118 2 <00010054fe4a027c058e0013003a40239611a71102860c8911020a980911
009801130100000a09a80e22500601068014545e182b10f65dedfd3c3c10
3c003fed3fed3130005d015d01152627260235100037150606021514171e
02027c9765909c0132f67b9e4e211a4a7dfe6f254c6691018ad4013601ff
6e2a44ecfe96c5d6af8aa79a>ZHYQFK+TimesNewRomanPSMT AddT42Char 
1 250 3 <0001002efe4a0256058e00130039402429042a08480503009801110a9809
13000101090aa80e222006300640060306801558a4182b10f65dedfd3c3c
103c003fed3fed3130015d13351617161215100007353636123534272e02
2e98658f9cfecff77b9f4d21194b7c05642a4b6692fe77d5fecafe016e25
45eb016bc5d5b08aa69a>ZHYQFK+TimesNewRomanPSMT AddT42Char 
1 588 5 <0001006efeab019800c800170053402759025917c4160309176019d01903
0901000704040f081200b612400c0b043a0f151f1580150315b8012a400b
1f0f5f0f020f19189ca4182b4e10f45d4dfd5ded003fede4123901111217
393130015d01711335363635342726232207062322263534363332161514
066e67710907070b251214313a4b3642678ffeab2c228f50130d0914093a
333146735f67b100>ZHYQFK+TimesNewRomanPSMT AddT42Char 
ZHYQFK+TimesNewRomanPSMT /CharStrings get begin
/parenleft 2 def
/parenright 3 def
/comma 5 def
end
ZHYQFK+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZHYQFK+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus /comma /hyphen /.notdef /slash /.notdef /one /two /three 156{/.notdef}rp /endash 47{/.notdef}rp]ZHYQFK+TimesNewRomanPSMT nfZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf98.3074 536.316 mo(\()shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf104.299 536.316 mo(j )[4.99812 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf113.796 536.316 mo(- 1/2, )[5.99113 4.49796 8.99591 4.99812 8.99591 4.49794 0 ]xshZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf156.271 536.316 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf169.765 536.316 mo(\320 1/)sh197.253 536.316 mo(2\))[8.99591 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf212.241 536.316 mo(\000\001)sh%ADOBeginSubsetFont: KAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZHYQFG+Calibri gcheck setglobal} if
1 322 1 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>ZHYQFG+Calibri AddT42Char 
1 970 3 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>ZHYQFG+Calibri AddT42Char 
1 606 2 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>ZHYQFG+Calibri AddT42Char 
ZHYQFG+Calibri /CharStrings get begin
/g1 1 def
/g3 3 def
/g2 2 def
end
ZHYQFG+Calibri /Encoding get
dup 35 /g1 put
dup 36 /g3 put
dup 37 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZHYQFG+Calibri*1 [33{/.notdef}rp /g8 /g9 /g1 /g3 /g2 218{/.notdef}rp]ZHYQFG+Calibri nfZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf318.892 451.651 mo(#)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf329.302 451.651 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf317.716 537.852 mo($)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf327.309 537.852 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf219.249 454.003 mo(%)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf229.035 454.003 mo(\000\001)sh412.453 453.45 mo
412.453 523.857 li
[76200 25400 ] 0 dsh
gsave
[-7.87043e-05 0 0 7.86947e-05 412.453 453.45 ]ct
@
grestore newpath
487.602 459.054 mo
487.602 529.461 li
[] 0 dsh
gsave
[-7.87043e-05 0 0 7.86947e-05 487.602 459.054 ]ct
@
grestore newpath
416.881 459.217 mo
487.296 459.217 li
gsave
[0 7.86947e-05 7.87043e-05 0 416.881 459.217 ]ct
@
grestore newpath
412.177 526.3 mo
482.593 526.3 li
gsave
[0 7.86947e-05 7.87043e-05 0 412.177 526.3 ]ct
@
grestore newpath
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: KAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZHYQFG+Calibri gcheck setglobal} if
1 1220 4 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>ZHYQFG+Calibri AddT42Char 
1 1928 7 <00020063ff41058705210027003b008e401d0a2112281810014d28100f01
4d28140d014d28120c014d28180b014d28b80232400a00201c301c801c03
1c32b8ffe8b310014d32b8fff0b30f014d32b8ffecb30d014d32b8ffeeb3
0c014d32b8ffe8b30b014d32b80233b412210a0d2db80129b41753250437
b8012bb10d56003fedd4cd3fed123939012fe12b2b2b2b2bd45dc4e12b2b
2b2b2b123939313005140e0223222e0227060623222e0235343e0233321e
0215140e02071e0501342e0223220e0215141e0233323e020587050a0c06
145974843e31966392d58b444a94de948bd38f4813293e2a496e48281408
feac275b987070985f29265a9772719a5e2872171f1106213f5a3c1e2c56
a6f7a09af9af5f56a5f29d519484702d3c43220f132302e06ebc8b4e538d
ba6872bf8c4d548fbd00>ZHYQFG+Calibri AddT42Char 
1 1686 6 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>ZHYQFG+Calibri AddT42Char 
ZHYQFG+Calibri /CharStrings get begin
/g4 4 def
/g7 7 def
/g6 6 def
end
ZHYQFG+Calibri /Encoding get
dup 38 /g4 put
dup 39 /g7 put
dup 40 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZHYQFG+Calibri*1 [33{/.notdef}rp /g8 /g9 /g1 /g3 /g2 /g4 /g7 /g6 215{/.notdef}rp]ZHYQFG+Calibri nfZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf393.21 451.886 mo(#)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf403.621 451.886 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf395.562 538.087 mo($)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf405.155 538.087 mo(\000\001)shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf515.263 537.726 mo(\()shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf521.255 537.726 mo(j )[4.99811 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf530.751 537.726 mo(- 1/2, )[5.99115 4.49792 8.99591 4.99817 8.99591 4.49792 0 ]xshZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf573.227 537.726 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf586.721 537.726 mo(\320 1/)sh614.209 537.726 mo(2\))[8.99591 0 ]xshZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf629.197 537.726 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf493.399 452.12 mo(&)shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf504.468 452.12 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf496.43 539.368 mo(')shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf508.536 539.368 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf217.998 538.087 mo(\()shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf227.292 538.087 mo(\000\001)shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf342.223 450.901 mo(\()shZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf348.214 450.901 mo(j)shZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf353.213 450.901 mo(, )[4.49796 0 ]xshZHYQFI+TimesNewRomanPS-ItalicMT*1 [17.9918 0 0 -17.9896 0 0 ]msf362.209 450.901 mo(n )[8.99591 0 ]xshZHYQFK+TimesNewRomanPSMT*1 [17.9918 0 0 -17.9896 0 0 ]msf375.703 450.901 mo(\))shZHYQFH+PMingLiU [17.9918 0 0 -17.9896 0 0 ]msf381.694 450.901 mo(\000\001)sh355.565 145.39 mo
355.565 144.529 356.263 143.831 357.124 143.831 cv
363.361 143.831 li
364.222 143.831 364.92 144.529 364.92 145.39 cv
364.92 271.753 li
364.92 272.614 364.222 273.312 363.361 273.312 cv
357.124 273.312 li
356.263 273.312 355.565 272.614 355.565 271.753 cv
cp
0 .991913 1 0 cmyk
28575 lw
[228600 85725 ] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 355.565 143.831 ]ct
@
grestore newpath
290.344 214.354 mo
289.392 214.354 288.619 213.582 288.619 212.63 cv
288.619 205.731 li
288.619 204.779 289.392 204.007 290.344 204.007 cv
430.153 204.007 li
431.105 204.007 431.878 204.779 431.878 205.731 cv
431.878 212.63 li
431.878 213.582 431.105 214.354 430.153 214.354 cv
cp
gsave
[0 -7.86947e-05 7.87043e-05 0 288.619 214.354 ]ct
@
grestore newpath
307.662 519.524 mo
313.862 519.524 li
314.718 519.524 315.412 518.831 315.412 517.975 cv
315.412 453.676 li
306.112 453.676 li
306.112 517.975 li
306.112 518.831 306.806 519.524 307.662 519.524 cv
cp
gsave
[7.87043e-05 0 0 -7.86947e-05 306.112 519.524 ]ct
@
grestore newpath
311.145 462.072 mo
311.145 456.073 li
311.145 455.244 310.473 454.573 309.645 454.573 cv
243.025 454.573 li
243.025 463.572 li
309.645 463.572 li
310.473 463.572 311.145 462.901 311.145 462.072 cv
cp
gsave
[0 -7.86947e-05 -7.87043e-05 0 311.145 463.572 ]ct
@
grestore newpath
305.705 458.233 mo
305.705 454.921 308.139 452.237 311.141 452.237 cv
314.144 452.237 316.578 454.921 316.578 458.233 cv
316.578 461.545 314.144 464.23 311.141 464.23 cv
308.139 464.23 305.705 461.545 305.705 458.233 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
305.705 458.233 mo
305.705 454.921 308.139 452.237 311.141 452.237 cv
314.144 452.237 316.578 454.921 316.578 458.233 cv
316.578 461.545 314.144 464.23 311.141 464.23 cv
308.139 464.23 305.705 461.545 305.705 458.233 cv
cp
.686061 .353338 .0289006 0 cmyk
9525 lw
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 305.705 452.237 ]ct
@
grestore newpath
355.565 208.62 mo
355.565 205.364 357.659 202.724 360.242 202.724 cv
362.826 202.724 364.92 205.364 364.92 208.62 cv
364.92 211.877 362.826 214.516 360.242 214.516 cv
357.659 214.516 355.565 211.877 355.565 208.62 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
355.565 208.62 mo
355.565 205.364 357.659 202.724 360.242 202.724 cv
362.826 202.724 364.92 205.364 364.92 208.62 cv
364.92 211.877 362.826 214.516 360.242 214.516 cv
357.659 214.516 355.565 211.877 355.565 208.62 cv
cp
.686061 .353338 .0289006 0 cmyk
gsave
[7.87043e-05 0 0 7.86947e-05 355.565 202.724 ]ct
@
grestore newpath
305.006 528.959 mo
305.006 522.655 li
305.006 521.785 304.3 521.079 303.43 521.079 cv
235.721 521.079 li
235.721 530.535 li
303.43 530.535 li
304.3 530.535 305.006 529.83 305.006 528.959 cv
cp
.921111 .178012 1 .0749218 cmyk
28575 lw
[228600 85725 ] 0 dsh
gsave
[0 -7.86947e-05 -7.87043e-05 0 305.006 530.535 ]ct
@
grestore newpath
232.363 529.421 mo
238.874 529.421 li
239.773 529.421 240.502 528.692 240.502 527.793 cv
240.502 463.572 li
230.735 463.572 li
230.735 527.793 li
230.735 528.692 231.464 529.421 232.363 529.421 cv
cp
gsave
[7.87043e-05 0 0 -7.86947e-05 230.735 529.421 ]ct
@
grestore newpath
231.284 526.617 mo
231.284 523.361 233.378 520.721 235.961 520.721 cv
238.545 520.721 240.639 523.361 240.639 526.617 cv
240.639 529.874 238.545 532.514 235.961 532.514 cv
233.378 532.514 231.284 529.874 231.284 526.617 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
231.284 526.617 mo
231.284 523.361 233.378 520.721 235.961 520.721 cv
238.545 520.721 240.639 523.361 240.639 526.617 cv
240.639 529.874 238.545 532.513 235.961 532.513 cv
233.378 532.513 231.284 529.874 231.284 526.617 cv
cp
.686061 .353338 .0289006 0 cmyk
9525 lw
[] 0 dsh
gsave
[7.87043e-05 0 0 7.86947e-05 231.284 520.721 ]ct
@
grestore newpath
409.406 519.636 mo
415.386 519.636 li
416.212 519.636 416.881 518.967 416.881 518.141 cv
416.881 453.788 li
407.91 453.788 li
407.91 518.141 li
407.91 518.967 408.58 519.636 409.406 519.636 cv
cp
0 .991913 1 0 cmyk
28575 lw
[228600 85725 ] 0 dsh
gsave
[7.87043e-05 0 0 -7.86947e-05 407.91 519.636 ]ct
@
grestore newpath
480.448 462.639 mo
480.448 456.276 li
480.448 455.397 479.736 454.685 478.857 454.685 cv
412.453 454.685 li
412.453 464.23 li
478.857 464.23 li
479.736 464.23 480.448 463.518 480.448 462.639 cv
cp
gsave
[0 -7.86947e-05 -7.87043e-05 0 480.448 464.23 ]ct
@
grestore newpath
417.265 458.334 mo
417.265 455.077 414.728 452.438 411.599 452.438 cv
408.47 452.438 405.933 455.077 405.933 458.334 cv
405.933 461.59 408.47 464.23 411.599 464.23 cv
414.728 464.23 417.265 461.59 417.265 458.334 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
417.265 458.334 mo
417.265 455.077 414.728 452.438 411.599 452.438 cv
408.47 452.438 405.933 455.077 405.933 458.334 cv
405.933 461.59 408.47 464.23 411.599 464.23 cv
414.728 464.23 417.265 461.59 417.265 458.334 cv
cp
.686061 .353338 .0289006 0 cmyk
9525 lw
[] 0 dsh
gsave
[-7.87043e-05 0 0 7.86947e-05 417.265 452.438 ]ct
@
grestore newpath
484.173 529.26 mo
490.684 529.26 li
491.583 529.26 492.311 528.532 492.311 527.633 cv
492.311 466.866 li
482.545 466.866 li
482.545 527.633 li
482.545 528.532 483.274 529.26 484.173 529.26 cv
cp
.639063 1 .202548 .114961 cmyk
28575 lw
[228600 85725 ] 0 dsh
gsave
[7.87043e-05 0 0 -7.86947e-05 482.545 529.26 ]ct
@
grestore newpath
488.263 528.617 mo
488.263 523.248 li
488.263 522.506 487.662 521.905 486.92 521.905 cv
418.978 521.905 li
418.978 529.959 li
486.92 529.959 li
487.662 529.959 488.263 529.358 488.263 528.617 cv
cp
gsave
[0 -7.86947e-05 -7.87043e-05 0 488.263 529.959 ]ct
@
grestore newpath
493.436 526.818 mo
493.436 523.562 490.842 520.922 487.641 520.922 cv
484.44 520.922 481.846 523.562 481.846 526.818 cv
481.846 530.075 484.44 532.714 487.641 532.714 cv
490.842 532.714 493.436 530.075 493.436 526.818 cv
cp
.989349 .713832 .202213 .0462043 cmyk
ef
493.436 526.818 mo
493.436 523.562 490.842 520.922 487.641 520.922 cv
484.44 520.922 481.846 523.562 481.846 526.818 cv
481.846 530.075 484.44 532.714 487.641 532.714 cv
490.842 532.714 493.436 530.075 493.436 526.818 cv
cp
.686061 .353338 .0289006 0 cmyk
9525 lw
[] 0 dsh
gsave
[-7.87043e-05 0 0 7.86947e-05 493.436 520.922 ]ct
@
grestore newpath
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: KAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ZHYQFG+Calibri gcheck setglobal} if
1 1438 5 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>ZHYQFG+Calibri AddT42Char 
1 2774 10 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>ZHYQFG+Calibri AddT42Char 
1 2844 11 <00010046006c03b60416002f0014b22a241eb8010cb20c0612002f33cdfd
cd33313001140e02232111140e0223222e02351121222e0235343e023321
11343e0233321e02151121321e0203b6060a0e08feb808111c15141d1108
feb8090d0a06060a0d08014908111d14151c11080149080d0b050240131b
1208fe94080b080505080b08016c08121b13121b1208016c080d09050509
0d08fe9408121b00>ZHYQFG+Calibri AddT42Char 
ZHYQFG+Calibri /CharStrings get begin
/g5 5 def
/g10 10 def
/g11 11 def
end
ZHYQFG+Calibri /Encoding get
dup 41 /g5 put
dup 42 /g10 put
dup 43 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/ZHYQFG+Calibri*1 [33{/.notdef}rp /g8 /g9 /g1 /g3 /g2 /g4 /g7 /g6 /g5 /g10 /g11 212{/.notdef}rp]ZHYQFG+Calibri nfZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf265.167 497.52 mo($\))[9.59329 0 ]xshZHYQFG+Calibri*1 [11.9945 0 0 -11.9931 0 0 ]msf283.546 502.017 mo(*)shZHYQFH+PMingLiU [11.9945 0 0 -11.9931 0 0 ]msf287.218 502.017 mo(\000\001)shZHYQFG+Calibri*1 [17.9918 0 0 -17.9896 0 0 ]msf440.722 496.933 mo($\))[9.59329 0 ]xshZHYQFG+Calibri*1 [11.9945 0 0 -11.9931 0 0 ]msf459.1 501.43 mo(+)shZHYQFH+PMingLiU [11.9945 0 0 -11.9931 0 0 ]msf465.074 501.43 mo(\000\001)shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZHYQFG+Calibri*1 uf/ZHYQFG+Calibri uf/KAAAAA+Calibri uf/ZHYQFJ+PMingLiU-Identity-H uf/ZHYQFJ+PMingLiU /CIDFont ur/ZHYQFK+TimesNewRomanPSMT*1 uf/ZHYQFK+TimesNewRomanPSMT uf/OAAAAA+TimesNewRomanPSMT uf/ZHYQFL+TimesNewRomanPSMT*1 uf/ZHYQFL+TimesNewRomanPSMT uf/PAAAAA+TimesNewRomanPSMT uf/ZHYQFH+PMingLiU-Identity-H uf/ZHYQFH+PMingLiU /CIDFont ur/ZHYQFI+TimesNewRomanPS-ItalicMT*1 uf/ZHYQFI+TimesNewRomanPS-ItalicMT uf/MAAAAA+TimesNewRomanPS-ItalicMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
